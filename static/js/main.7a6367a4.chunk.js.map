{"version":3,"sources":["images/distributed-voting-platform.png","images/ethereum-logo.png","images/metamask-logo.png","images/no-acceptance.png","images/no-metamask.png","images/wrong-network.png","utils/enums.ts","components/about/AboutPage.tsx","components/common/Header.tsx","utils/eth.ts","components/createVote/AnswersList.tsx","components/createVote/CategoryPanel.tsx","components/createVote/VoteDates.tsx","components/createVote/PrivilegedAddresses.tsx","components/createVote/VoteTypePanel.tsx","components/createVote/CreateVoteForm.tsx","components/createVote/DisplayResult.tsx","components/createVote/LoadingResult.tsx","components/createVote/CreateVotePage.tsx","components/vote/NotFoundModal.tsx","components/vote/ResultsPieChart.tsx","components/vote/VoteModal.tsx","components/vote/ResultsModal.tsx","components/home/HomePage.tsx","components/home/NoAccessPage.tsx","components/listvotings/CategoryDropdown.tsx","components/listvotings/PrivacyButtons.tsx","components/listvotings/VotingList.tsx","components/listvotings/ListVotingsPanel.tsx","components/listvotings/ListVotingsPage.tsx","components/App.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","CategoryPanelType","PageMode","PrivacySetting","ResultStatus","Validation","VoteType","VotingExpiryOption","VotingState","AboutPage","react_default","a","createElement","Grid","Row","Col","md","style","fontWeight","marginTop","marginBottom","textAlign","fontSize","target","rel","href","display","marginLeft","marginRight","maxHeight","maxWidth","src","EthereumLogo","DVPLogo","MetaMaskLogo","mdOffset","Component","Header","react","Navbar","fluid","fixedTop","collapseOnSelect","Nav","bsStyle","justified","lib","to","disabled","this","props","block","NavItem","fetchCategories","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee2","blockchainData","web3","managerInstance","numberOfCategories","categoryPromises","wrap","_context2","prev","next","manager","t0","parseInt","methods","call","t1","sent","toConsumableArray","Array","keys","map","_ref2","_callee","index","categoryAddress","categoryContract","categoryName","_context","categoryContractsList","eth","Contract","CategoryAbi","abi","utils","toUtf8","abrupt","name","address","stop","_x2","apply","arguments","Promise","all","_x","fetchVotings","_ref3","_callee4","category","votingState","categoryInstance","now","numberOfVotings","votingPromises","_context4","moment","utc","unix","numberOfContracts","_ref4","_callee3","votingAddress","votingInstance","resp","info","testPassed","_context3","votingContracts","VotingAbi","viewContractInfo","question","answers","raw","hexToUtf8","votingEndTime","resultsEndTime","isPrivate","isPrivileged","hasUserVoted","Active","Passive","Disabled","accounts","hasVoted","contract","_x6","then","votings","filter","v","_x3","_x4","_x5","submitVote","_ref5","_callee5","voting","answerIndex","_context5","options","from","vote","send","_x7","_x8","_x9","fetchVoting","_ref6","_callee6","_context6","_x10","_x11","fetchResults","_ref7","_callee7","results","_context7","viewVotes","_x12","ethStrBytesLength","str","hex","Web3","fromUtf8","hexToBytes","length","AnswersList","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","deleteListItem","e","allAnswers","indexOf","currentTarget","innerText","splice","setAnswersHandler","setAnswers","_this2","ListGroup","answer","OverlayTrigger","placement","overlay","Tooltip","id","key","ListGroupItem","onClick","CategoryPanel","categoryHandler","chosenCategory","setCategoryInParent","value","categoryPanel","categoriesList","FormGroup","FormControl","onChange","componentClass","placeholder","validationState","touched","valid","Success","Error","type","Feedback","HelpBlock","isVotingEndDateTimeValid","votingEndDateTime","isAfter","add","VoteDates","voteEndDateHandler","inputMoment","newVoteEndDateTime","set","hours","endDateTime","minutes","setEndDateTimeInParent","voteEndTimeHandler","year","month","day","votingExpiryOptionHandler","setVotingExpiryOptionInParent","ControlLabel","DateTime_default","inputProps","closeOnSelect","isValidDate","current","subtract","timeFormat","dateFormat","ToggleButtonGroup","votingExpiryOption","ToggleButton","ThreeDays","Week","Month","PrivilegedAddresses","saveAddresses","addressesArray","split","setState","fileContentMismatch","noAddressesInFile","setPrivilegedAddressesInParent","loadAddressesFromFile","file","files","fileReader","FileReader","onloadend","handleFileRead","readAsText","contentArray","result","toString","c","addresses","isAddress","state","voteType","Warning","Glyphicon","glyph","padding","verticalAlign","fontStyle","accept","label","textAreaValue","resize","VoteTypePanel","changeVoteType","document","getElementById","checked","Public","Private","setVoteTypeInParent","setPrivilegedVoters","voters","setPrivilegedVotersInParent","Radio","inline","PrivilegedAddresses_PrivilegedAddresses","privilegedVoters","reduce","prevVal","currVal","currIdx","privilegedAddressesValid","privilegedAddressesTouched","CreateVoteForm","componentDidMount","fetchCategoriesAndSetState","formData","answersValid","isAnswerListValid","categoryPanelProps","objectSpread","Existing","isCategoryNameValid","arePrivilegedAddressesValid","questionValid","isQuestionValid","voteDatesProps","voteEndDateTime","componentDidUpdate","isCategoriesListFetched","console","log","categories","New","setQuestion","questionTouched","setTypedAnswer","val","typedAnswer","typedAnswerTouched","typedAnswerValid","isTypedAnswerValid","addAnswer","push","answersFromChild","answersTouched","setVoteEnd","dateTimeFromChild","setVotingExpiryOption","votingExpiryOptionFromChild","changeCategoryPanelToExisting","event","changeCategoryPanelToNew","setCategory","categoryFromChild","setVoteType","voteTypeFromChild","privilegedVotersFromChild","handleCreateVote","setSubmitData","submitFailed","every","answerList","controlId","InputGroup","onKeyPress","Button","AnswersList_AnswersList","VoteDates_VoteDates","CategoryPanel_CategoryPanel","VoteTypePanel_VoteTypePanel","DisplayResult","ulStyle","liStyle","margin","status","Alert","votingCreatedEventData","txHash","bsSize","hardReset","softReset","LoadingResult","sleep","getTransactionResult","ms","resolve","setTimeout","className","sm","fontFamily","react_loader_spinner_default","color","height","width","CreateVotePage","txResponse","txReceipt","_txHash","_votingCreatedEventData","createVotingWithNewCategory","opt","createVotingWithExistingCategory","transactionHash","decodeLog","indexed","events","VotingCreated","data","topics","resultStatus","error","Failure","mode","Finalized","finish","formState","Fetching","setModeToForm","Form","resetPage","CreateVoteForm_CreateVoteForm","LoadingResult_LoadingResult","DisplayResult_DisplayResult","NotFoundModal","Modal","show","onHide","handleOnHide","Title","Body","Panel","Heading","renderCustomizedLabel","cx","cy","midAngle","innerRadius","outerRadius","percent","RADIAN","Math","PI","radius","x","cos","y","sin","fill","textAnchor","dominantBaseline","concat","toFixed","COLORS","ResultsPieChart","chartData","singleOption","ResponsiveContainer","PieChart","Pie","isAnimationActive","_","Cell","component_Tooltip","Legend","iconSize","covertTimestampToDate","timestamp","format","VoteModal","handleAnswerClick","chosenAnswer","setChosenAnswerInParent","handleSubmit","isWaitingForTxResponse","requestDataRefresh","_address","paddingLeft","paddingRight","assign","active","Footer","ResultsModal","getSortedAnswersWithResults","sort","reverse","votingInfo","answersAndResults","i","currentAnswer","currenResult","first","second","sumOfAllVotes","partial","obj","Table","responsive","element","ResultsPieChart_ResultsPieChart","HomePage","searchVoting","fetchedVoting","getValidationState","searchBoxText","searchActionCalled","showNotFoundModal","showResultsModal","showVoteModal","votingResults","answerIndexFromChild","handleSearchBoxChange","setErrorHelper","text","substring","match","isDataRefreshRequested","modal","VoteModal_VoteModal","ResultsModal_ResultsModal","NotFoundModal_NotFoundModal","NoAccessPage","imgSrc","imgChoice","NoMetamaskInstalled","WrongNetwork","NoMetamaskAccess","Route","exact","path","render","title","firstParagraph","secondParagraph","component","Redirect","CategoryDropdown","_categories","setCategoriesInParent","areCategoriesFetched","_categories2","handleOnClick","chosenCategoryName","chosenCategoryIndex","buttonTitle","forEach","setChosenCategoryInParent","DropdownButton","cat","MenuItem","eventKey","onSelect","PrivacyButtons","handleOnChange","chosenPrivacySetting","setchosenPrivacySettingInParent","All","VotingList","params","nrOfVotingsPerPage","publicVotingTooltip","privateVotingTooltip","inaccessibleVotingTooltip","fetchVotingsAndSetState","prevProps","pageInfo","areVotingsFetched","privacySetting","activePageIndex","displayInaccessibleVotings","filterPhase","dataRefreshRequestHandled","focus","handleVotingClick","chosenVotingIndex","setChosenVotingAddressInParent","filteredVotings","setVotingsInParent","includes","paginationFirst","handlePageClick","paginationNext","newIndex","paginationPrev","paginationLast","votingsForPage","nrOfPages","ceil","votingsToDisplay","getVotingsForPage","Pagination","First","Prev","Item","autoFocus","Next","Last","dividedVotings","slice","ListVotingsPanel","setCategories","categoriesFromChild","setPrivacySetting","privacySettingFromChild","chosenVotingAddress","setVotings","votingsFromChild","handleCategoryClick","categoryIndexFromChild","votingAddressFromChild","_results","find","dataRefreshed","votingTime","handleCheck","displayInacessibleVotings","handleFilterChange","CategoryDropdown_CategoryDropdown","PrivacyButtons_PrivacyButtons","react_switch_default","onColor","onHandleColor","uncheckedIcon","checkedIcon","VotingList_VotingList","ListVotingsPage","votingIndexFromChild","ListVotingsPanel_ListVotingsPanel","App","wrongNetwork","networkType","instance","window","noMetamask","enable","net","getNetworkType","AppConfig","ManagerAbi","setProvider","currentProvider","connectedNetworkType","waitingForAccess","lol","forceUpdate","Header_Header","NoAccessPage_NoAccessPage","BrowserRouter","HomePage_HomePage","CreateVotePage_CreateVotePage","ListVotingsPage_ListVotingsPage","ReactDOM","App_App"],"mappings":"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","file":"static/js/main.7a6367a4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/distributed-voting-platform.6e763b2b.png\";","module.exports = __webpack_public_path__ + \"static/media/ethereum-logo.6b316d3d.png\";","module.exports = __webpack_public_path__ + \"static/media/metamask-logo.79e4e98f.png\";","module.exports = __webpack_public_path__ + \"static/media/no-acceptance.6043a999.png\";","module.exports = __webpack_public_path__ + \"static/media/no-metamask.afcf3094.png\";","module.exports = __webpack_public_path__ + \"static/media/wrong-network.2e278d0d.png\";","export enum CategoryPanelType {\n    Existing = \"existing\",\n    New = \"new\",\n}\n\nexport enum PageMode {\n    Form = \"form\",\n    Fetching = \"fetching\",\n    Finalized = \"finalized\",\n}\n\nexport enum PrivacySetting {\n    All = \"all\",\n    Public = \"public\",\n    Private = \"private\",\n}\n\nexport enum ResultStatus {\n    Success = \"success\",\n    Failure = \"failure\",\n}\n\nexport enum Validation {\n    Success = \"success\",\n    Error = \"error\",\n    Warning = \"warning\",\n}\n\nexport enum VoteType {\n    Public = \"public\",\n    Private = \"private\",\n}\n\nexport enum VotingExpiryOption {\n    ThreeDays = 3 * 24 * 60 * 60,\n    Week = 7 * 24 * 60 * 60,\n    Month = 30 * 24 * 60 * 60,\n}\n\nexport enum VotingState {\n    Active = \"active\",\n    Passive = \"passive\",\n    Disabled = \"disabled\",\n}\n","import React, { Component } from \"react\";\nimport { Col, Grid, Row } from \"react-bootstrap\";\nimport DVPLogo from \"../../images/distributed-voting-platform.png\";\nimport EthereumLogo from \"../../images/ethereum-logo.png\";\nimport MetaMaskLogo from \"../../images/metamask-logo.png\";\nexport default class AboutPage extends Component {\n  public render() {\n    return (\n      <Grid>\n        <Row>\n          <Col md={12}>\n            <h1 style={{ fontWeight: \"bold\", marginTop: \"2em\", marginBottom: \"1.2em\", textAlign: \"center\" }}>\n              Distributed Voting Platform\n            </h1>\n            <h2 style={{ fontWeight: \"bold\", marginBottom: \"0.5em\", textAlign: \"center\" }}>is a</h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={4}>\n            <h3 style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Distributed</h3>\n            <p style={{ fontSize: \"1.1em\", textAlign: \"justify\" }}>\n              This system is running on thousands of nodes at the same time, thus eliminating a single point of failure.\n            </p>\n            <p style={{ fontSize: \"1.1em\", textAlign: \"justify\" }}>\n              But distribution serves not only as a way of providing high availability. The lack of central server\n              ensures that the platform has no single authority, which could manage all the operations internally\n              without other participants' consent.\n            </p>\n          </Col>\n          <Col md={4}>\n            <h3 style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Blockchain-based</h3>\n            <p style={{ fontSize: \"1.1em\", textAlign: \"justify\" }}>\n              This platform is created on top of a public blockchain, a distributed ledger technology.\n            </p>\n            <p style={{ fontSize: \"1.1em\", textAlign: \"justify\" }}>\n              This means blockchain is used as a database for logging all the events that occur in the system. It is\n              also used as a network protocol for connecting to and sharing data with other nodes around the world. The\n              cryptography behind blockchain protects the stored records from alteration and makes them persistent. And\n              there is no registration process, so all the transactions made in the network are anonymous.\n            </p>\n          </Col>\n\n          <Col md={4}>\n            <h3 style={{ textAlign: \"center\", fontWeight: \"bold\" }}>Voting platform</h3>\n            <p style={{ fontSize: \"1.1em\", textAlign: \"justify\" }}>\n              Create ballots and polls, and participate in other's people votings.\n            </p>\n            <p style={{ fontSize: \"1.1em\", textAlign: \"justify\" }}>\n              This platform allows you to participate in public votings created by people from all around the world. Do\n              you want to learn someone else's stance on the matter of your choice – just create your own voting. Or\n              maybe you want only <em>some</em> people to be able to participate? If you do, you can create a{\" \"}\n              <em>private voting</em> by defining a list of privileged voters.\n            </p>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12}>\n            <h2\n              style={{\n                fontWeight: \"bold\",\n                marginBottom: \"2em\",\n                marginTop: \"2em\",\n                textAlign: \"center\",\n              }}\n            >\n              How does it work?\n            </h2>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={4}>\n            {\" \"}\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://www.ethereum.org/\">\n              <img\n                style={{\n                  display: \"block\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  maxHeight: \"100%\", // 2nd option: 50%\n                  maxWidth: \"100%\",\n                }}\n                src={EthereumLogo}\n              />{\" \"}\n            </a>\n            <ul style={{ fontSize: \"1.2em\", marginTop: \"2em\" }}>\n              <li>Stores votings as smart contracts</li>\n              <li>Validates user's actions based on his adress' permissions</li>\n              <li>Publicly available transaction (voting) history</li>\n            </ul>\n          </Col>\n          <Col md={4}>\n            <img\n              style={{\n                display: \"block\",\n                marginLeft: \"auto\",\n                marginRight: \"auto\",\n                maxHeight: \"100%\", // 2nd option: 50%\n                maxWidth: \"100%\",\n              }}\n              src={DVPLogo}\n            />\n            <ul style={{ fontSize: \"1.2em\", marginTop: \"2em\" }}>\n              <li>Connected to Ethereum blockchain via Metamask</li>\n              <li>Clear and intuitive interface for creating polls, voting and displaying results</li>\n            </ul>\n          </Col>\n          <Col md={4}>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href=\"https://metamask.io/\">\n              <img\n                style={{\n                  display: \"block\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  maxHeight: \"100%\", // 2nd option: 50%\n                  maxWidth: \"100%\",\n                }}\n                src={MetaMaskLogo}\n              />{\" \"}\n            </a>\n            <ul style={{ fontSize: \"1.2em\", marginTop: \"2em\" }}>\n              <li>Web browser plugin storing user's wallet</li>\n              <li>Responsible for communication with blockchain</li>\n            </ul>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12}>\n            <h2\n              style={{\n                fontWeight: \"bold\",\n                marginBottom: \"2em\",\n                marginTop: \"2em\",\n                textAlign: \"center\",\n              }}\n            >\n              Application's genesis\n            </h2>\n          </Col>\n        </Row>\n        <Row style={{ marginBottom: \"4em\" }}>\n          <Col md={8} mdOffset={2}>\n            <p style={{ fontSize: \"1.2em\", textAlign: \"justify\" }}>\n              Distributed Voting Platform was created by Andrzej Wódkiewicz and Gustaw Żyngiel, final year students\n              pursuing the BSc in Computer Science programme at Warsaw University of Technology, Faculty of Mathematics\n              and Information Science. The application is their thesis project, developed under the guidance of Paweł\n              Kotowski, BEng, PhD, their thesis supervisor.\n            </p>\n          </Col>\n        </Row>\n      </Grid>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Nav, Navbar, NavItem } from \"react-bootstrap\";\nimport { IndexLinkContainer, LinkContainer } from \"react-router-bootstrap\";\n\ninterface IHeaderProps {\n  block: number;\n}\n\nexport default class Header extends Component<IHeaderProps> {\n  public render() {\n    return (\n      <Fragment>\n        <Navbar fluid fixedTop={false} collapseOnSelect={false}>\n          <Nav bsStyle=\"tabs\" justified>\n            <IndexLinkContainer to=\"/\" disabled={this.props.block === 4 ? true : false}>\n              <NavItem>Home</NavItem>\n            </IndexLinkContainer>\n            <LinkContainer to=\"/createvote\" disabled={this.props.block > 0 ? true : false}>\n              <NavItem disabled={true}>Create new voting</NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/listvotings\" disabled={this.props.block > 0 ? true : false}>\n              <NavItem>List votings</NavItem>\n            </LinkContainer>\n            <LinkContainer to=\"/about\" disabled={this.props.block === 4 ? true : false}>\n              <NavItem>About</NavItem>\n            </LinkContainer>\n          </Nav>\n        </Navbar>\n      </Fragment>\n    );\n  }\n}\n","import moment from \"moment\";\nimport Web3 from \"web3\";\nimport CategoryAbi from \"../contracts/CategoryContract.json\";\nimport VotingAbi from \"../contracts/VotingContract.json\";\nimport { CategoryContract } from \"../typed-contracts/CategoryContract\";\nimport { ManagerContract } from \"../typed-contracts/ManagerContract\";\nimport { VotingContract } from \"../typed-contracts/VotingContract\";\nimport { VotingState } from \"./enums\";\nimport { BlockchainData, Category, Voting, VotingInfo } from \"./types\";\n\nexport const fetchCategories = async (blockchainData: BlockchainData) => {\n    const web3 = blockchainData.web3;\n    const managerInstance = blockchainData.manager as ManagerContract;\n    const numberOfCategories = parseInt(await managerInstance.methods.numberOfCategories().call(), 10);\n\n    const categoryPromises = [...Array(numberOfCategories).keys()].map(\n        async (index): Promise<Category> => {\n            const categoryAddress = await managerInstance.methods.categoryContractsList(index).call();\n            const categoryContract = new web3.eth.Contract(CategoryAbi.abi, categoryAddress) as CategoryContract;\n            const categoryName = web3.utils.toUtf8(await categoryContract.methods.categoryName().call());\n            return { name: categoryName, address: categoryAddress };\n        }\n    );\n\n    return Promise.all(categoryPromises);\n};\n\n// tslint:disable:object-literal-sort-keys\nexport const fetchVotings = async (blockchainData: BlockchainData, category: Category, votingState: VotingState) => {\n    const web3 = blockchainData.web3;\n    const categoryInstance = new web3.eth.Contract(CategoryAbi.abi, category.address) as CategoryContract;\n    const now = moment().utc().unix(); // prettier-ignore\n    const numberOfVotings = parseInt(await categoryInstance.methods.numberOfContracts().call(), 10);\n\n    const votingPromises = [...Array(numberOfVotings).keys()].map(\n        async (index): Promise<Voting> => {\n            const votingAddress = await categoryInstance.methods.votingContracts(index).call();\n            const votingInstance = new web3.eth.Contract(VotingAbi.abi, votingAddress) as VotingContract;\n            const resp = await votingInstance.methods.viewContractInfo().call();\n            const info: VotingInfo = {\n                question: resp[0],\n                categoryAddress: resp[1],\n                answers: resp[2].map((raw) => web3.utils.hexToUtf8(raw)),\n                votingEndTime: parseInt(resp[3], 10),\n                resultsEndTime: parseInt(resp[4], 10),\n                isPrivate: null,\n                isPrivileged: null,\n                hasUserVoted: null,\n            };\n\n            let testPassed: boolean;\n            switch (votingState) {\n                case VotingState.Active:\n                    testPassed = now <= info.votingEndTime;\n                    break;\n                case VotingState.Passive:\n                    testPassed = info.votingEndTime < now && now <= info.resultsEndTime;\n                    break;\n                case VotingState.Disabled:\n                    testPassed = info.resultsEndTime < now;\n                    break;\n                default:\n                    testPassed = false;\n            }\n            if (!testPassed) {\n                return null;\n            }\n\n            info.isPrivate = await votingInstance.methods.isPrivate().call();\n            if (info.isPrivate) {\n                info.isPrivileged = await votingInstance.methods.isPrivileged(blockchainData.accounts[0]).call();\n            }\n            info.hasUserVoted = await votingInstance.methods.hasVoted(blockchainData.accounts[0]).call();\n            return {\n                contract: votingInstance,\n                info,\n            };\n        }\n    );\n\n    return Promise.all(votingPromises).then((votings) => votings.filter((v) => v !== null));\n};\n\nexport const submitVote = async (blockchainData: BlockchainData, voting: Voting, answerIndex: number) => {\n    const votingInstance = voting.contract;\n    votingInstance.options.from = blockchainData.accounts[0];\n    await votingInstance.methods.vote(answerIndex).send();\n};\n\nexport const fetchVoting = async (blockchainData: BlockchainData, address: string) => {\n    const web3 = blockchainData.web3;\n    try {\n        const votingInstance = new web3.eth.Contract(VotingAbi.abi, address) as VotingContract;\n        const resp = await votingInstance.methods.viewContractInfo().call();\n        const info: VotingInfo = {\n            question: resp[0],\n            categoryAddress: resp[1],\n            answers: resp[2].map((raw) => web3.utils.hexToUtf8(raw)),\n            votingEndTime: parseInt(resp[3], 10),\n            resultsEndTime: parseInt(resp[4], 10),\n            isPrivate: null,\n            isPrivileged: null,\n            hasUserVoted: null,\n        };\n        info.isPrivate = await votingInstance.methods.isPrivate().call();\n        if (info.isPrivate) {\n            info.isPrivileged = await votingInstance.methods.isPrivileged(blockchainData.accounts[0]).call();\n        }\n        info.hasUserVoted = await votingInstance.methods.hasVoted(blockchainData.accounts[0]).call();\n        const voting: Voting = {\n            contract: votingInstance,\n            info,\n        };\n        return voting;\n    } catch {\n        return null;\n    }\n};\n\nexport const fetchResults = async (voting: Voting) => {\n    const votingInstance = voting.contract;\n    const results = await votingInstance.methods.viewVotes().call();\n    return results;\n};\n\nexport function ethStrBytesLength(str: string) {\n    const hex = Web3.utils.fromUtf8(str);\n    const bytes = Web3.utils.hexToBytes(hex);\n    return bytes.length;\n}\n","import React, { Component } from \"react\";\nimport { ListGroup, ListGroupItem, OverlayTrigger, Tooltip } from \"react-bootstrap\";\n\ninterface IAnswersListProps {\n  answers: string[];\n  setAnswers: (arg: string[]) => void;\n}\n\nexport default class AnswersList extends Component<IAnswersListProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  public deleteListItem = (e: React.MouseEvent<ListGroupItem & HTMLInputElement>) => {\n    const allAnswers = this.props.answers;\n    const index = allAnswers.indexOf(e.currentTarget.innerText);\n    if (index > -1) {\n      allAnswers.splice(index, 1);\n    }\n    this.setAnswersHandler(allAnswers);\n  };\n\n  public setAnswersHandler = (answers) => {\n    this.props.setAnswers(answers);\n  };\n\n  public render() {\n    return (\n      <ListGroup>\n        {this.props.answers.map((answer) => (\n          <OverlayTrigger\n            placement=\"right\"\n            overlay={\n              <Tooltip id=\"answer-tooltip\">\n                <strong>Click</strong> to remove the answer\n              </Tooltip>\n            }\n            key={answer}\n          >\n            <ListGroupItem onClick={this.deleteListItem}>{answer}</ListGroupItem>\n          </OverlayTrigger>\n        ))}\n      </ListGroup>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { FormControl, FormGroup, HelpBlock } from \"react-bootstrap\";\nimport { CategoryPanelType, Validation } from \"../../utils/enums\";\nimport { Category, ContractAddress } from \"../../utils/types\";\n\nexport interface ICategoryPanelProps {\n  categoriesList: Category[];\n  categoryPanel: CategoryPanelType;\n  chosenCategory: string | ContractAddress;\n  setCategoryInParent: (arg: string) => void;\n  touched: boolean;\n  valid: boolean;\n}\n\nexport default class CategoryPanel extends Component<ICategoryPanelProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  public render() {\n    const categoryPanel = this.props.categoryPanel;\n    if (categoryPanel === \"existing\") {\n      if (this.props.categoriesList) {\n        return (\n          <FormGroup>\n            <FormControl\n              onChange={this.categoryHandler}\n              componentClass=\"select\"\n              placeholder=\"select\"\n              value={this.props.chosenCategory ? this.props.chosenCategory : \"\"}\n            >\n              {this.props.categoriesList.map((category) => {\n                return (\n                  <option value={category.address} key={category.address}>\n                    {category.name}\n                  </option>\n                );\n              })}\n            </FormControl>\n          </FormGroup>\n        );\n      } else {\n        return <h2>Loading categories from blockchain...</h2>;\n      }\n    } else {\n      return (\n        <FormGroup\n          validationState={this.props.touched ? (this.props.valid ? Validation.Success : Validation.Error) : null}\n        >\n          <FormControl\n            onChange={this.categoryHandler}\n            id=\"answer\"\n            type=\"text\"\n            placeholder=\"Category name here\"\n            value={this.props.chosenCategory ? this.props.chosenCategory : \"\"}\n          />\n          <FormControl.Feedback />\n          {this.props.touched && !this.props.valid ? (\n            this.props.chosenCategory.length === 0 ? (\n              <HelpBlock>Category name cannot be empty</HelpBlock>\n            ) : (\n              <HelpBlock>Category name cannot be larger than 32 bytes</HelpBlock>\n            )\n          ) : null}\n        </FormGroup>\n      );\n    }\n  }\n\n  private categoryHandler = (chosenCategory) => {\n    this.props.setCategoryInParent(chosenCategory.target.value);\n  };\n}\n","import moment, { Moment } from \"moment\";\nimport React, { Component } from \"react\";\nimport { Col, ControlLabel, FormGroup, HelpBlock, Row, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport Datetime from \"react-datetime\";\nimport { Validation, VotingExpiryOption } from \"../../utils/enums\";\n\nexport function isVotingEndDateTimeValid(votingEndDateTime: Moment) {\n  return votingEndDateTime.isAfter(moment().add(20, \"seconds\"));\n}\n\nexport interface IVoteDatesProps {\n  endDateTime: moment.Moment;\n  votingExpiryOption: VotingExpiryOption;\n  valid: boolean;\n  setEndDateTimeInParent: (arg: moment.Moment) => void;\n  setVotingExpiryOptionInParent: (arg: VotingExpiryOption) => void;\n}\n\n// tslint:disable:object-literal-sort-keys\nexport default class VoteDates extends Component<IVoteDatesProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <Row>\n        <Col md={6}>\n          <Row>\n            <Col md={12}>\n              <ControlLabel>Deadline</ControlLabel>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={6}>\n              <FormGroup>\n                <HelpBlock>Date</HelpBlock>\n                <Datetime\n                  inputProps={{ id: \"voteDateEnd\" }}\n                  closeOnSelect={true}\n                  isValidDate={(current) => {\n                    return current.isAfter(moment().subtract(1, \"day\"), \"minute\");\n                  }}\n                  timeFormat={false}\n                  onChange={this.voteEndDateHandler}\n                  value={this.props.endDateTime}\n                />\n              </FormGroup>\n            </Col>\n            <Col md={6}>\n              <FormGroup validationState={this.props.valid ? null : Validation.Error}>\n                <HelpBlock>Time</HelpBlock>\n                <Datetime\n                  inputProps={{ id: \"voteTimeEnd\" }}\n                  dateFormat={false}\n                  closeOnSelect={true}\n                  onChange={this.voteEndTimeHandler}\n                  value={this.props.endDateTime}\n                />\n                {this.props.valid ? null : <HelpBlock>Voting has to be active for at least 20s</HelpBlock>}\n              </FormGroup>\n            </Col>\n          </Row>\n        </Col>\n\n        <Col md={6}>\n          <Row>\n            <Col md={12}>\n              <ControlLabel>Results expiry date</ControlLabel>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12}>\n              <FormGroup>\n                <HelpBlock>How long will the results be available?</HelpBlock>\n                <ToggleButtonGroup\n                  type=\"radio\"\n                  name=\"votingExpiryOption\"\n                  value={this.props.votingExpiryOption}\n                  onChange={this.votingExpiryOptionHandler}\n                  justified\n                >\n                  <ToggleButton value={VotingExpiryOption.ThreeDays}>3 Days</ToggleButton>\n                  <ToggleButton value={VotingExpiryOption.Week}>1 Week</ToggleButton>\n                  <ToggleButton value={VotingExpiryOption.Month}>1 Month</ToggleButton>\n                </ToggleButtonGroup>\n              </FormGroup>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  }\n\n  private voteEndDateHandler = (inputMoment) => {\n    const newVoteEndDateTime = moment(inputMoment).set({\n      hours: this.props.endDateTime.hours(),\n      minutes: this.props.endDateTime.minutes(),\n    });\n\n    this.props.setEndDateTimeInParent(newVoteEndDateTime);\n  };\n  private voteEndTimeHandler = (inputMoment) => {\n    const newVoteEndDateTime = moment(inputMoment).set({\n      year: this.props.endDateTime.year(),\n      month: this.props.endDateTime.month(),\n      day: this.props.endDateTime.day(),\n    });\n\n    this.props.setEndDateTimeInParent(newVoteEndDateTime);\n  };\n\n  private votingExpiryOptionHandler = (value: VotingExpiryOption) => {\n    this.props.setVotingExpiryOptionInParent(value);\n  };\n}\n","import React, { Component, FormEvent } from \"react\";\nimport { ControlLabel, FormControl, FormGroup, Glyphicon, HelpBlock, OverlayTrigger, Tooltip } from \"react-bootstrap\";\nimport Web3 from \"web3\";\nimport { Validation, VoteType } from \"../../utils/enums\";\n\ninterface IPrivilegedAddressesProps {\n  voteType: VoteType;\n  touched: boolean;\n  valid: boolean;\n  textAreaValue: string;\n  setPrivilegedAddressesInParent: (arg: string[]) => void;\n}\n\ninterface IPrivilegedAddressesState {\n  fileContentMismatch: boolean;\n  noAddressesInFile: boolean;\n}\n\nexport default class PrivilegedAddresses extends Component<IPrivilegedAddressesProps, IPrivilegedAddressesState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileContentMismatch: false,\n      noAddressesInFile: false,\n    };\n  }\n\n  public render() {\n    if (this.props.voteType === \"private\") {\n      return (\n        <FormGroup\n          validationState={\n            this.props.touched && !this.props.valid\n              ? Validation.Error\n              : this.state.fileContentMismatch || this.state.noAddressesInFile\n              ? Validation.Warning\n              : null\n          }\n        >\n          <ControlLabel>\n            Privileged addresses\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={\n                <Tooltip id=\"tooltip\">\n                  <p>Every address should be in a separate line</p>\n                </Tooltip>\n              }\n            >\n              <Glyphicon glyph=\"info-sign\" style={{ padding: \"0 0 3px 5px\", verticalAlign: \"middle\" }} />\n            </OverlayTrigger>\n          </ControlLabel>\n          <HelpBlock>\n            Manually enter addresses below or load them from the <span style={{ fontStyle: \"italic\" }}>.txt</span> file.\n          </HelpBlock>\n          <FormControl\n            type=\"file\"\n            accept=\".txt\"\n            onChange={this.loadAddressesFromFile}\n            label=\"File\"\n            style={{ marginBottom: \"1em\" }}\n          />\n          <FormControl\n            onChange={this.saveAddresses}\n            componentClass=\"textarea\"\n            placeholder=\"Don't forget to paste your own address here (if you want to vote)!\"\n            value={this.props.textAreaValue}\n            id=\"privilegedAddressesTextArea\"\n            style={{ resize: \"vertical\" }}\n          />\n\n          {this.state.noAddressesInFile ? (\n            <HelpBlock>Uploaded file does not contain any valid keccak256 Ethereum addresses</HelpBlock>\n          ) : null}\n\n          {this.state.fileContentMismatch ? (\n            <HelpBlock>Uploaded file contained some lines without valid addresses. Verify imported data.</HelpBlock>\n          ) : null}\n\n          {this.props.touched && !this.props.valid ? (\n            this.props.textAreaValue === \"\" ? (\n              <HelpBlock>You have to provide at least one address</HelpBlock>\n            ) : (\n              <HelpBlock>Addresses have to be valid keccak256 Ethereum addresses</HelpBlock>\n            )\n          ) : null}\n        </FormGroup>\n      );\n    } else return null;\n  }\n\n  private saveAddresses = (e: FormEvent<FormControl & HTMLInputElement>) => {\n    const addressesArray = (e.currentTarget.value as string).split(\"\\n\");\n    this.setState({\n      fileContentMismatch: false,\n      noAddressesInFile: false,\n    });\n    this.props.setPrivilegedAddressesInParent(addressesArray);\n  };\n\n  private loadAddressesFromFile = (e: any) => {\n    const file = e.target.files[0];\n    if (file) {\n      const fileReader = new FileReader();\n      fileReader.onloadend = () => {\n        this.handleFileRead(fileReader);\n      };\n      fileReader.readAsText(file);\n    }\n  };\n\n  private handleFileRead = (fileReader: FileReader) => {\n    const content = fileReader.result;\n    const contentArray = content\n      .toString()\n      .split(\"\\n\")\n      .filter((c) => c !== \"\");\n\n    const addresses = contentArray.filter((c) => Web3.utils.isAddress(c));\n    if (addresses.length === 0) {\n      this.setState({\n        fileContentMismatch: false,\n        noAddressesInFile: true,\n      });\n      return; // Do not touch form and do not overwrite existing data\n    }\n    if (addresses.length !== contentArray.length) {\n      this.setState({\n        fileContentMismatch: true,\n        noAddressesInFile: false,\n      });\n    } else {\n      this.setState({\n        fileContentMismatch: false,\n        noAddressesInFile: false,\n      });\n    }\n    this.props.setPrivilegedAddressesInParent(addresses);\n  };\n}\n","import React, { Component, Fragment } from \"react\";\nimport { ControlLabel, FormGroup, Glyphicon, OverlayTrigger, Radio, Tooltip } from \"react-bootstrap\";\nimport { VoteType } from \"../../utils/enums\";\nimport { Voter } from \"../../utils/types\";\nimport PrivilegedAddresses from \"./PrivilegedAddresses\";\n\ninterface IVoteTypeProps {\n  voteType: VoteType;\n  privilegedVoters: Voter[];\n  privilegedAddressesTouched: boolean;\n  privilegedAddressesValid: boolean;\n  setVoteTypeInParent: (arg: VoteType) => void;\n  setPrivilegedVotersInParent: (arg: Voter[]) => void;\n}\n\nexport default class VoteTypePanel extends Component<IVoteTypeProps> {\n  constructor(props: Readonly<IVoteTypeProps>) {\n    super(props);\n  }\n\n  public changeVoteType = () => {\n    const publicVote = document.getElementById(\"votePublic\") as HTMLInputElement;\n    const voteType = publicVote.checked ? VoteType.Public : VoteType.Private;\n    this.props.setVoteTypeInParent(voteType);\n  };\n\n  public setPrivilegedVoters = (voters: Voter[]) => {\n    this.props.setPrivilegedVotersInParent(voters);\n  };\n\n  public render() {\n    return (\n      <Fragment>\n        <FormGroup>\n          <ControlLabel style={{ display: \"block\" }}>\n            Vote type\n            <OverlayTrigger\n              placement=\"top\"\n              overlay={\n                <Tooltip id=\"tooltip\">\n                  <strong>Public voting</strong>\n                  <p>Everyone can take active participation in this voting!</p>\n                  <strong>Private voting</strong>\n                  <p>Only privileged addresses are permitted to vote.</p>\n                </Tooltip>\n              }\n            >\n              <Glyphicon glyph=\"info-sign\" style={{ padding: \"0 0 3px 5px\", verticalAlign: \"middle\" }} />\n            </OverlayTrigger>\n          </ControlLabel>\n\n          <Radio\n            id=\"votePublic\"\n            name=\"radioGroup\"\n            checked={this.props.voteType === VoteType.Public ? true : false}\n            onChange={this.changeVoteType}\n            inline\n          >\n            Public\n          </Radio>\n          <Radio\n            id=\"votePrivate\"\n            name=\"radioGroup\"\n            checked={this.props.voteType === VoteType.Private ? true : false}\n            onChange={this.changeVoteType}\n            inline\n          >\n            Private\n          </Radio>\n        </FormGroup>\n\n        <PrivilegedAddresses\n          setPrivilegedAddressesInParent={this.setPrivilegedVoters}\n          voteType={this.props.voteType}\n          textAreaValue={this.props.privilegedVoters.reduce((prevVal, currVal, currIdx) => {\n            return currIdx === 0 ? currVal : prevVal + \"\\n\" + currVal;\n          }, \"\")}\n          valid={this.props.privilegedAddressesValid}\n          touched={this.props.privilegedAddressesTouched}\n        />\n      </Fragment>\n    );\n  }\n}\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport { Button, Col, ControlLabel, FormControl, FormGroup, HelpBlock, InputGroup, Radio, Row } from \"react-bootstrap\";\nimport \"react-datetime/css/react-datetime.css\"; //tslint:disable-line\nimport { CategoryPanelType, Validation, VoteType, VotingExpiryOption } from \"../../utils/enums\";\nimport { ethStrBytesLength, fetchCategories } from \"../../utils/eth\";\nimport { BlockchainData, VoteFormData, Voter } from \"../../utils/types\";\nimport AnswersList from \"./AnswersList\";\nimport CategoryPanel, { ICategoryPanelProps } from \"./CategoryPanel\";\nimport VoteDates, { isVotingEndDateTimeValid, IVoteDatesProps } from \"./VoteDates\";\nimport VoteTypePanel from \"./VoteTypePanel\";\n\ninterface ICreateVoteFormProps {\n  formData: VoteFormData;\n  blockchainData: BlockchainData;\n  setSubmitData: (arg: ICreateVoteFormState) => void;\n}\n\nexport interface ICreateVoteFormState {\n  answers: string[];\n  answersTouched: boolean;\n  answersValid: boolean;\n  isCategoriesListFetched: boolean;\n  privilegedVoters: Voter[];\n  privilegedAddressesValid: boolean;\n  privilegedAddressesTouched: boolean;\n  question: string;\n  questionTouched: boolean;\n  questionValid: boolean;\n  typedAnswer: string;\n  typedAnswerValid: boolean;\n  typedAnswerTouched: boolean;\n  voteDatesProps: IVoteDatesProps;\n  voteType: VoteType;\n  categoryPanelProps: ICategoryPanelProps;\n  submitFailed: boolean;\n}\n\nexport default class CreateVoteForm extends Component<ICreateVoteFormProps, ICreateVoteFormState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      answers: [],\n      answersTouched: false,\n      answersValid: true,\n      categoryPanelProps: {\n        categoriesList: [],\n        categoryPanel: CategoryPanelType.New,\n        chosenCategory: \"\",\n        setCategoryInParent: this.setCategory,\n        touched: false,\n        valid: false,\n      },\n      isCategoriesListFetched: false,\n      privilegedAddressesTouched: false,\n      privilegedAddressesValid: false,\n      privilegedVoters: [],\n      question: \"\",\n      questionTouched: false,\n      questionValid: false,\n      submitFailed: false,\n      typedAnswer: \"\",\n      typedAnswerTouched: false,\n      typedAnswerValid: false,\n      voteDatesProps: {\n        endDateTime: moment().add(1, \"h\"), // prettier-ignore\n        setEndDateTimeInParent: this.setVoteEnd,\n        setVotingExpiryOptionInParent: this.setVotingExpiryOption,\n        valid: true,\n        votingExpiryOption: VotingExpiryOption.ThreeDays,\n      },\n      voteType: VoteType.Public,\n    };\n  }\n\n  public componentDidMount = async () => {\n    if (this.props.blockchainData) {\n      await this.fetchCategoriesAndSetState();\n    }\n    if (this.props.formData) {\n      this.setState((state, props) => {\n        return {\n          answers: props.formData.answers,\n          answersValid: this.isAnswerListValid(props.formData.answers),\n          categoryPanelProps: {\n            ...state.categoryPanelProps,\n            categoryPanel: props.formData.categoryPanel,\n            chosenCategory: props.formData.chosenCategory,\n            valid:\n              state.categoryPanelProps.categoryPanel === CategoryPanelType.Existing ||\n              this.isCategoryNameValid(props.formData.chosenCategory),\n          },\n          privilegedAddressesValid: this.arePrivilegedAddressesValid(props.formData.privilegedVoters),\n          privilegedVoters: props.formData.privilegedVoters,\n          question: props.formData.question,\n          questionValid: this.isQuestionValid(props.formData.question),\n          voteDatesProps: {\n            ...state.voteDatesProps,\n            endDateTime: props.formData.voteEndDateTime,\n            votingExpiryOption: props.formData.votingExpiryOption,\n          },\n          voteType: props.formData.voteType,\n        };\n      });\n    }\n  };\n\n  public componentDidUpdate = async () => {\n    // If blockchainData was initialized after this component had mounted\n    if (!this.state.isCategoriesListFetched && this.props.blockchainData) {\n      console.log(\"refresh\");\n      await this.fetchCategoriesAndSetState();\n\n      // Restore previously set data\n      if (this.props.formData) {\n        this.setState((state, props) => {\n          return {\n            categoryPanelProps: {\n              ...state.categoryPanelProps,\n              categoryPanel: props.formData.categoryPanel,\n              chosenCategory: props.formData.chosenCategory,\n              valid:\n                state.categoryPanelProps.categoryPanel === CategoryPanelType.Existing ||\n                this.isCategoryNameValid(props.formData.chosenCategory),\n            },\n          };\n        });\n      }\n    }\n  };\n\n  public render() {\n    return (\n      <form>\n        <Row>\n          <Col md={12}>\n            <FormGroup\n              controlId=\"question\"\n              validationState={\n                this.state.questionTouched ? (this.state.questionValid ? Validation.Success : Validation.Error) : null\n              }\n            >\n              <ControlLabel>Question</ControlLabel>\n              <FormControl\n                type=\"text\"\n                placeholder=\"E.g. 'Do you believe in life after love?'\"\n                onChange={this.setQuestion}\n                value={this.state.question}\n              />\n              <FormControl.Feedback />\n              {this.state.questionTouched && !this.state.questionValid ? (\n                <HelpBlock>Question cannot be empty</HelpBlock>\n              ) : null}\n            </FormGroup>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={12}>\n            <FormGroup\n              controlId=\"answer\"\n              validationState={\n                this.state.answersTouched && !this.state.answersValid\n                  ? Validation.Error\n                  : this.state.typedAnswerTouched && !this.state.typedAnswerValid\n                  ? Validation.Warning\n                  : null\n              }\n            >\n              <ControlLabel>Answers</ControlLabel>\n              <InputGroup>\n                <FormControl\n                  type=\"text\"\n                  placeholder=\"Your answer here\"\n                  onChange={this.setTypedAnswer}\n                  onKeyPress={(event) => {\n                    if (event.key === \"Enter\") {\n                      this.setState({ typedAnswerTouched: true });\n                      if (this.state.typedAnswerValid) {\n                        this.addAnswer();\n                      }\n                    }\n                  }}\n                  value={this.state.typedAnswer}\n                />{\" \"}\n                <InputGroup.Button>\n                  <Button onClick={this.addAnswer} disabled={this.state.typedAnswerValid ? null : true}>\n                    Add answer\n                  </Button>\n                </InputGroup.Button>\n              </InputGroup>\n              {this.state.typedAnswerTouched &&\n              !this.state.typedAnswerValid &&\n              ethStrBytesLength(this.state.typedAnswer) > 32 ? (\n                <HelpBlock>Answer cannot be larger than 32 bytes</HelpBlock>\n              ) : null}\n\n              {this.state.typedAnswerTouched && !this.state.typedAnswerValid && this.state.typedAnswer.length === 0 ? (\n                <HelpBlock>Answer cannot be empty</HelpBlock>\n              ) : null}\n\n              {this.state.typedAnswerTouched &&\n              !this.state.typedAnswerValid &&\n              this.state.answers.indexOf(this.state.typedAnswer) !== -1 ? (\n                <HelpBlock>Answers have to be unique</HelpBlock>\n              ) : null}\n\n              {this.state.answersTouched && !this.state.answersValid && this.state.answers.length < 2 ? (\n                <HelpBlock>There must be at least 2 answers</HelpBlock>\n              ) : null}\n            </FormGroup>\n          </Col>\n        </Row>\n\n        {this.state.answers.length !== 0 ? (\n          <Row>\n            <Col md={12}>\n              <AnswersList setAnswers={this.setAnswers} answers={this.state.answers} />\n            </Col>\n          </Row>\n        ) : null}\n\n        <VoteDates\n          endDateTime={this.state.voteDatesProps.endDateTime}\n          votingExpiryOption={this.state.voteDatesProps.votingExpiryOption}\n          valid={this.state.voteDatesProps.valid}\n          setVotingExpiryOptionInParent={this.state.voteDatesProps.setVotingExpiryOptionInParent}\n          setEndDateTimeInParent={this.state.voteDatesProps.setEndDateTimeInParent}\n        />\n\n        <Row>\n          <Col md={12}>\n            <FormGroup>\n              <ControlLabel>Category</ControlLabel>\n              <HelpBlock>Select an existing category from the list or create a new one.</HelpBlock>\n              <Radio\n                name=\"categoryGroup\"\n                id=\"category-from-list\"\n                disabled={\n                  this.state.isCategoriesListFetched && this.state.categoryPanelProps.categoriesList.length === 0\n                }\n                checked={this.state.categoryPanelProps.categoryPanel === \"existing\"}\n                onChange={this.changeCategoryPanelToExisting}\n                inline\n              >\n                Select existing category\n              </Radio>\n              <Radio\n                name=\"categoryGroup\"\n                id=\"category-new\"\n                checked={this.state.categoryPanelProps.categoryPanel === \"new\"}\n                onChange={this.changeCategoryPanelToNew}\n                inline\n              >\n                Create new category\n              </Radio>\n            </FormGroup>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={12}>\n            <CategoryPanel\n              categoryPanel={this.state.categoryPanelProps.categoryPanel}\n              categoriesList={this.state.categoryPanelProps.categoriesList}\n              chosenCategory={this.state.categoryPanelProps.chosenCategory}\n              valid={this.state.categoryPanelProps.valid}\n              touched={this.state.categoryPanelProps.touched}\n              setCategoryInParent={this.state.categoryPanelProps.setCategoryInParent}\n            />\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={12}>\n            <VoteTypePanel\n              setVoteTypeInParent={this.setVoteType}\n              setPrivilegedVotersInParent={this.setPrivilegedVoters}\n              voteType={this.state.voteType}\n              privilegedVoters={this.state.privilegedVoters}\n              privilegedAddressesValid={this.state.privilegedAddressesValid}\n              privilegedAddressesTouched={this.state.privilegedAddressesTouched}\n            />\n          </Col>\n        </Row>\n\n        <Row style={{ marginBottom: \"10px\" }}>\n          <Col md={12}>\n            <FormGroup validationState={this.state.submitFailed ? Validation.Error : null}>\n              <Button onClick={this.handleCreateVote}>Submit</Button>\n              {this.state.submitFailed ? <HelpBlock>You need to fill the form correctly</HelpBlock> : null}\n            </FormGroup>\n          </Col>\n        </Row>\n      </form>\n    );\n  }\n\n  private fetchCategoriesAndSetState = async () => {\n    const categories = await fetchCategories(this.props.blockchainData);\n    this.setState((state) => {\n      return {\n        categoryPanelProps: {\n          ...state.categoryPanelProps,\n          categoriesList: categories,\n          categoryPanel: categories.length > 0 ? CategoryPanelType.Existing : CategoryPanelType.New,\n          chosenCategory: categories.length > 0 ? categories[0].address : \"\",\n          valid: categories.length > 0,\n        },\n        isCategoriesListFetched: true,\n      };\n    });\n  };\n\n  private setQuestion = (e) => {\n    const question = e.currentTarget.value;\n    this.setState(() => ({\n      question,\n      questionTouched: true,\n      questionValid: this.isQuestionValid(question),\n    }));\n  };\n\n  private setTypedAnswer = (e: React.FormEvent<FormControl & HTMLInputElement>) => {\n    // Do not simplify this code!\n    // Setting state using e.currentTarget.value directly generates \"released/nullified synthetic event\" warning\n    // It's probably because setState does not execute synchronously\n    const val = e.currentTarget.value;\n    this.setState(() => ({\n      typedAnswer: val,\n      typedAnswerTouched: true,\n      typedAnswerValid: this.isTypedAnswerValid(val),\n    }));\n  };\n\n  private addAnswer = () => {\n    // Adding answers doesn't \"touch\" them\n    const answer = this.state.typedAnswer;\n    const allAnswers = this.state.answers;\n    if (!this.isTypedAnswerValid(answer)) {\n      return;\n    }\n    allAnswers.push(answer);\n\n    this.setState(() => ({\n      answers: allAnswers,\n      answersValid: allAnswers.length >= 2,\n      typedAnswer: \"\",\n      typedAnswerTouched: false,\n      typedAnswerValid: false,\n    }));\n  };\n\n  private setAnswers = (answersFromChild) => {\n    // Setting answers from child means erasing an answer -> \"touch\"\n    this.setState(() => ({\n      answers: answersFromChild,\n      answersTouched: true,\n      answersValid: answersFromChild.length >= 2,\n    }));\n  };\n\n  private setVoteEnd = (dateTimeFromChild: moment.Moment) => {\n    this.setState((state) => {\n      return {\n        voteDatesProps: {\n          ...state.voteDatesProps,\n          endDateTime: dateTimeFromChild,\n          valid: isVotingEndDateTimeValid(dateTimeFromChild),\n        },\n      };\n    });\n  };\n\n  private setVotingExpiryOption = (votingExpiryOptionFromChild: VotingExpiryOption) => {\n    this.setState((state) => {\n      return { voteDatesProps: { ...state.voteDatesProps, votingExpiryOption: votingExpiryOptionFromChild } };\n    });\n  };\n\n  private changeCategoryPanelToExisting = (event: React.FormEvent<Radio & HTMLInputElement>) => {\n    if (!event.currentTarget.value) {\n      return;\n    }\n    const chosenCategory =\n      this.state.categoryPanelProps.categoriesList.length > 0\n        ? this.state.categoryPanelProps.categoriesList[0].address\n        : \"\";\n\n    this.setState((state) => {\n      return {\n        categoryPanelProps: {\n          ...state.categoryPanelProps,\n          categoryPanel: CategoryPanelType.Existing,\n          chosenCategory,\n          valid: true,\n        },\n      };\n    });\n  };\n\n  private changeCategoryPanelToNew = (event: React.FormEvent<Radio & HTMLInputElement>) => {\n    if (!event.currentTarget.value) {\n      return;\n    }\n\n    this.setState((state) => {\n      return {\n        categoryPanelProps: {\n          ...state.categoryPanelProps,\n          categoryPanel: CategoryPanelType.New,\n          chosenCategory: \"\",\n          valid: false,\n        },\n      };\n    });\n  };\n\n  private setCategory = (categoryFromChild: string) => {\n    this.setState((state) => {\n      return {\n        categoryPanelProps: {\n          ...state.categoryPanelProps,\n          chosenCategory: categoryFromChild,\n          touched: true,\n          valid:\n            state.categoryPanelProps.categoryPanel === CategoryPanelType.Existing ||\n            this.isCategoryNameValid(categoryFromChild),\n        },\n      };\n    });\n  };\n\n  private setVoteType = (voteTypeFromChild) => {\n    this.setState(() => ({\n      privilegedAddressesTouched: false,\n      privilegedVoters: [],\n      voteType: voteTypeFromChild,\n    }));\n  };\n\n  private setPrivilegedVoters = (privilegedVotersFromChild: Voter[]) => {\n    this.setState(() => ({\n      privilegedAddressesTouched: true,\n      privilegedAddressesValid: this.arePrivilegedAddressesValid(privilegedVotersFromChild),\n      privilegedVoters: privilegedVotersFromChild,\n    }));\n  };\n\n  private handleCreateVote = () => {\n    // Touch all touchable inputs\n    this.setState((state) => {\n      return {\n        answersTouched: true,\n        categoryPanelProps: { ...state.categoryPanelProps, touched: true },\n        privilegedAddressesTouched: true,\n        questionTouched: true,\n      };\n    });\n\n    // Validate answer list on submit\n    if (!this.isAnswerListValid(this.state.answers)) {\n      this.setState({\n        answersValid: false,\n      });\n    }\n\n    if (!isVotingEndDateTimeValid(this.state.voteDatesProps.endDateTime)) {\n      this.setState((state) => {\n        return {\n          submitFailed: true,\n          voteDatesProps: {\n            ...state.voteDatesProps,\n            valid: false,\n          },\n        };\n      });\n      return; // setState not updating state fast enough and control flow goes straight to setSubmitData call\n    }\n\n    if (\n      !this.state.questionValid ||\n      !this.state.answersValid ||\n      !this.state.voteDatesProps.valid ||\n      !this.state.categoryPanelProps.valid ||\n      (this.state.voteType === VoteType.Private && !this.state.privilegedAddressesValid)\n    ) {\n      this.setState({\n        submitFailed: true,\n      });\n    } else {\n      this.props.setSubmitData(this.state);\n    }\n  };\n\n  private arePrivilegedAddressesValid = (addresses: Voter[]) => {\n    return addresses.length > 0 && addresses.every((a) => this.props.blockchainData.web3.utils.isAddress(a));\n  };\n\n  private isTypedAnswerValid = (typedAnswer: string) => {\n    return (\n      typedAnswer.length > 0 && ethStrBytesLength(typedAnswer) <= 32 && this.state.answers.indexOf(typedAnswer) === -1\n    );\n  };\n\n  private isAnswerListValid = (answerList: string[]) => {\n    return answerList.length >= 2;\n  };\n\n  private isCategoryNameValid = (categoryName: string) => {\n    return categoryName.length > 0 && ethStrBytesLength(categoryName) <= 32;\n  };\n\n  private isQuestionValid = (question: string) => {\n    return question.length > 0;\n  };\n}\n","import React, { Component } from \"react\";\nimport { Alert, Button } from \"react-bootstrap\";\nimport { ResultStatus } from \"../../utils/enums\";\nimport { ContractAddress, VotingCreatedEventData } from \"../../utils/types\";\n\ninterface IDisplayResultProps {\n  status: ResultStatus;\n  softReset: () => void;\n  hardReset: () => void;\n  txHash: ContractAddress;\n  votingCreatedEventData: VotingCreatedEventData;\n}\n\nexport default class DisplayResult extends Component<IDisplayResultProps> {\n  private ulStyle = { marginTop: \"10px\" };\n  private liStyle = { margin: \"5px 0px 8px -25px\" };\n  public render() {\n    if (this.props.status === ResultStatus.Success) {\n      return (\n        <Alert bsStyle=\"success\">\n          <h1 style={{ textAlign: \"center\", marginBottom: \"30px\" }}>Voting created</h1>\n          <h4 style={{ textAlign: \"center\" }}>\n            Share this address with your friends and let them know about your voting!\n          </h4>\n\n          <br />\n          <h4 style={{ textAlign: \"center\" }}>\n            <strong>{this.props.votingCreatedEventData ? this.props.votingCreatedEventData.votingAddress : \"\"}</strong>\n          </h4>\n          <br />\n          <p>\n            What's next? You can:\n            <ul style={this.ulStyle}>\n              <li style={this.liStyle}>\n                lookup the transaction information on Etherscan using this TxHash: <strong>{this.props.txHash}</strong>\n              </li>\n              <li style={this.liStyle}>paste the voting address into the searchbar on homepage</li>\n              <li style={this.liStyle}>\n                see all the votings on <strong>List Votings</strong> subpage\n              </li>\n              <li style={this.liStyle}>\n                <Button bsSize=\"small\" onClick={this.props.hardReset}>\n                  Create a new voting\n                </Button>\n              </li>\n            </ul>\n          </p>\n        </Alert>\n      );\n    } else {\n      return (\n        <Alert bsStyle=\"danger\">\n          <h4>Oh snap! You got an error!</h4>\n          <p>Your contract was not submitted. Press the button below to fill the form again.</p>\n          <p>\n            <Button onClick={this.props.softReset}>Return to form</Button>\n          </p>\n        </Alert>\n      );\n    }\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { Col, Row } from \"react-bootstrap\";\nimport Loader from \"react-loader-spinner\";\n\ninterface ILoadingResultProps {\n  getTransactionResult: () => void;\n}\n\nexport default class LoadingResult extends Component<ILoadingResultProps> {\n  public componentDidMount = async () => {\n    await this.sleep(2000);\n\n    this.props.getTransactionResult();\n  };\n\n  public sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  public render() {\n    return (\n      <Fragment>\n        <Row className=\"text-center\" style={{ marginTop: \"-1em\" }}>\n          <Col sm={12}>\n            <h2\n              style={{\n                fontFamily: \"Roboto\",\n                marginBottom: \"5vh\",\n                marginTop: \"5vh\",\n              }}\n            >\n              Please wait\n            </h2>\n          </Col>\n        </Row>\n        <Row className=\"text-center\">\n          <Col sm={12}>\n            <Loader style={{ marginTop: \"20vh\" }} type=\"Grid\" color=\"#00BFFF\" height=\"30%\" width=\"30%\" />\n          </Col>\n        </Row>\n        <Row className=\"text-center\">\n          <Col sm={12}>\n            <h2\n              style={{\n                fontFamily: \"Roboto\",\n                marginBottom: \"5vh\",\n                marginTop: \"5vh\",\n                textAlign: \"center\",\n              }}\n            >\n              Your transaction is being processed{\" \"}\n            </h2>\n          </Col>\n        </Row>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Col, Grid, Row } from \"react-bootstrap\";\nimport \"react-datetime/css/react-datetime.css\"; // tslint:disable-line\nimport { TransactionReceipt } from \"web3/types\"; // tslint:disable-line\nimport { PageMode, ResultStatus, VoteType } from \"../../utils/enums\";\nimport { BlockchainData, ContractAddress, VoteFormData, VotingCreatedEventData } from \"../../utils/types\";\nimport CreateVoteForm, { ICreateVoteFormState } from \"./CreateVoteForm\";\nimport DisplayResult from \"./DisplayResult\";\nimport LoadingResult from \"./LoadingResult\";\n\ninterface ICreateVotePageProps {\n  blockchainData: BlockchainData;\n}\n\ninterface ICreateVotePageState {\n  formData: VoteFormData;\n  mode: PageMode;\n  resultStatus: ResultStatus;\n  txHash: ContractAddress;\n  votingCreatedEventData: VotingCreatedEventData;\n}\n\nexport default class CreateVotePage extends Component<ICreateVotePageProps, ICreateVotePageState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      formData: null,\n      mode: PageMode.Form,\n      resultStatus: ResultStatus.Success,\n      txHash: \"\",\n      votingCreatedEventData: null,\n    };\n  }\n\n  public getTransactionResult = async () => {\n    const blockchainData = this.props.blockchainData;\n    const web3 = blockchainData.web3;\n    const manager = blockchainData.manager;\n\n    try {\n      let txResponse;\n      if (this.state.formData.categoryPanel === \"new\") {\n        txResponse = await manager.methods\n          .createVotingWithNewCategory(\n            web3.utils.fromUtf8(this.state.formData.chosenCategory),\n            this.state.formData.question,\n            this.state.formData.answers.map((opt) => web3.utils.fromUtf8(opt)),\n            this.state.formData.voteEndDateTime.unix(),\n            this.state.formData.voteEndDateTime.unix() + this.state.formData.votingExpiryOption,\n            this.state.formData.voteType === VoteType.Private ? true : false,\n            this.state.formData.voteType === VoteType.Private ? this.state.formData.privilegedVoters : []\n          )\n          .send();\n      } else {\n        txResponse = await manager.methods\n          .createVotingWithExistingCategory(\n            this.state.formData.chosenCategory,\n            this.state.formData.question,\n            this.state.formData.answers.map((opt) => web3.utils.fromUtf8(opt)),\n            this.state.formData.voteEndDateTime.unix(),\n            this.state.formData.voteEndDateTime.unix() + this.state.formData.votingExpiryOption,\n            this.state.formData.voteType === VoteType.Private ? true : false,\n            this.state.formData.voteType === VoteType.Private ? this.state.formData.privilegedVoters : []\n          )\n          .send();\n      }\n      const txReceipt = txResponse as TransactionReceipt;\n      const txHash = txReceipt.transactionHash;\n      const votingCreatedEventData = web3.eth.abi.decodeLog(\n        [\n          {\n            indexed: false,\n            name: \"creator\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            name: \"votingAddress\",\n            type: \"address\",\n          },\n          {\n            indexed: false,\n            name: \"question\",\n            type: \"string\",\n          },\n        ],\n        txReceipt.events.VotingCreated.raw.data,\n        txReceipt.events.VotingCreated.raw.topics\n      ) as VotingCreatedEventData;\n\n      this.setState(() => ({\n        resultStatus: ResultStatus.Success,\n        txHash,\n        votingCreatedEventData,\n      }));\n    } catch (e) {\n      console.error(e);\n      this.setState(() => ({\n        resultStatus: ResultStatus.Failure,\n      }));\n    } finally {\n      this.setState(() => ({\n        mode: PageMode.Finalized,\n      }));\n    }\n  };\n\n  public render() {\n    return (\n      <Grid>\n        <Row>\n          {this.state.mode === PageMode.Form ? (\n            <Col md={10} mdOffset={1}>\n              <CreateVoteForm\n                setSubmitData={this.setSubmitData}\n                formData={this.state.formData}\n                blockchainData={this.props.blockchainData}\n              />\n            </Col>\n          ) : this.state.mode === PageMode.Fetching ? (\n            <Col md={6} mdOffset={3}>\n              <LoadingResult getTransactionResult={this.getTransactionResult} />\n            </Col>\n          ) : (\n            <Col md={8} mdOffset={2}>\n              <DisplayResult\n                status={this.state.resultStatus}\n                softReset={this.setModeToForm}\n                hardReset={this.resetPage}\n                votingCreatedEventData={this.state.votingCreatedEventData}\n                txHash={this.state.txHash}\n              />\n            </Col>\n          )}\n        </Row>\n      </Grid>\n    );\n  }\n\n  private setSubmitData = (formState: ICreateVoteFormState) => {\n    const formData: VoteFormData = {\n      answers: formState.answers,\n      categoryPanel: formState.categoryPanelProps.categoryPanel,\n      chosenCategory: formState.categoryPanelProps.chosenCategory,\n      privilegedVoters: formState.privilegedVoters,\n      question: formState.question,\n      voteEndDateTime: formState.voteDatesProps.endDateTime,\n      voteType: formState.voteType,\n      votingExpiryOption: formState.voteDatesProps.votingExpiryOption,\n    };\n    this.setState(() => ({\n      formData,\n      mode: PageMode.Fetching,\n    }));\n  };\n\n  private setModeToForm = () => {\n    this.setState(() => ({\n      mode: PageMode.Form,\n    }));\n  };\n\n  private resetPage = () => {\n    this.setState(() => ({\n      formData: null,\n      mode: PageMode.Form,\n      txHash: \"\",\n      votingCreatedEventData: null,\n    }));\n  };\n}\n","import React, { Component } from \"react\";\nimport { Modal, Panel } from \"react-bootstrap\";\n\ninterface INotFoundModalProps {\n  show: boolean;\n  handleOnHide: () => void;\n}\n\nexport default class NotFoundModal extends Component<INotFoundModalProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  public render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.handleOnHide}>\n        <Modal.Header>\n          <Modal.Title className=\"text-center\">Voting not found</Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Panel>\n            <Panel.Heading>\n              <Panel.Title componentClass=\"h3\">Possible reasons</Panel.Title>\n            </Panel.Heading>\n            <Panel.Body>\n              <h4>Invalid address</h4>\n              <p>You might have done a spelling error in the provided address.</p>\n              <h4>Voting has expired</h4>\n              <p>\n                Every voting has an expiration date. When it passes, it is impossible to check the results of the voting\n                via our application. However, because transactions on the blockchain are permanent, you can still\n                examine the voting contract's state using Etherscan:\n                <ul>\n                  <li>\n                    <a href=\"https://etherscan.io/\">Mainnet (Official Ethereum Network)</a>\n                  </li>\n                  <li>\n                    <a href=\"https://ropsten.etherscan.io/\">Ropsten (Test Network)</a>\n                  </li>\n                  <li>\n                    <a href=\"https://kovan.etherscan.io/\">Kovan (Test Network)</a>\n                  </li>\n                  <li>\n                    <a href=\"https://rinkeby.etherscan.io/\">Rinkeby (Test Network)</a>\n                  </li>\n                </ul>\n              </p>\n            </Panel.Body>\n          </Panel>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Cell, Legend, Pie, PieChart, ResponsiveContainer, Tooltip } from \"recharts\";\nimport { Voting } from \"../../utils/types\";\n\ninterface IResultsPieChartProps {\n  results: string[];\n  voting: Voting;\n}\n\ninterface IResultsPieChartState {\n  chartData: any[];\n  label: React.SVGProps<SVGAElement>;\n}\n\nconst renderCustomizedLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent }) => {\n  const RADIAN = Math.PI / 180;\n  const radius = innerRadius + (outerRadius - innerRadius) * 1.2;\n  const x = cx + radius * Math.cos(-midAngle * RADIAN);\n  const y = cy + radius * Math.sin(-midAngle * RADIAN);\n  return (\n    <text x={x} y={y} fill=\"black\" textAnchor={x > cx ? \"start\" : \"end\"} dominantBaseline=\"central\">\n      {`${(percent * 100).toFixed(2)}%`}\n    </text>\n  );\n};\n\nconst COLORS = [\n  \"#4FFF43\",\n  \"#FF7543\",\n  \"#438FFF\",\n  \"#DAFF43\",\n  \"#565A49\",\n  \"#DC35E8\",\n  \"#99FFCC\",\n  \"#B2A23A\",\n  \"#000066\",\n  \"#006666\",\n];\n\nexport default class ResultsPieChart extends Component<IResultsPieChartProps, IResultsPieChartState> {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      chartData: [],\n      label: null,\n    };\n  }\n\n  public componentDidMount = () => {\n    const chartData = [];\n    const answers = this.props.voting.info.answers;\n    const results = this.props.results.map((result) => parseInt(result, 10));\n\n    for (let index = 0; index < answers.length; index++) {\n      if (results[index] !== 0) {\n        const singleOption = { name: answers[index], value: results[index] };\n        chartData.push(singleOption);\n      }\n    }\n\n    this.setState({\n      chartData,\n    });\n  };\n\n  public render() {\n    return (\n      <ResponsiveContainer width=\"100%\" height={500}>\n        <PieChart>\n          <Pie\n            isAnimationActive={true}\n            data={this.state.chartData}\n            cx=\"50%\"\n            cy=\"45%\"\n            outerRadius=\"70%\"\n            label={renderCustomizedLabel}\n            fill=\"#8884d8\"\n          >\n            {this.state.chartData.map((_, index) => (\n              <Cell fill={COLORS[index % COLORS.length]} />\n            ))}\n          </Pie>\n          <Tooltip />\n          <Legend iconSize={20} />\n        </PieChart>\n      </ResponsiveContainer>\n    );\n  }\n}\n","import moment from \"moment\";\nimport React, { Component, Fragment } from \"react\";\nimport { Button, Col, ControlLabel, Modal, Panel, Row } from \"react-bootstrap\";\nimport Loader from \"react-loader-spinner\";\nimport { submitVote } from \"../../utils/eth\";\nimport { BlockchainData, Voting } from \"../../utils/types\";\n\ninterface IVoteModalProps {\n  blockchainData: BlockchainData;\n  chosenAnswer: number;\n  voting: Voting;\n  show: boolean;\n  setChosenAnswerInParent: (arg: number) => void;\n  requestDataRefresh: () => void;\n  handleOnHide: () => void;\n}\n\ninterface IVoteModalState {\n  isWaitingForTxResponse: boolean;\n  show: boolean;\n}\nexport const covertTimestampToDate = (timestamp) => {\n  return moment.unix(timestamp).format(\"MMMM Do YYYY, h:mm:ss A\");\n};\nexport default class VoteModal extends Component<IVoteModalProps, IVoteModalState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isWaitingForTxResponse: false,\n      show: false,\n    };\n  }\n\n  public render() {\n    return (\n      <Modal show={this.props.show} onHide={this.props.handleOnHide}>\n        <Modal.Body>\n          {this.state.isWaitingForTxResponse ? (\n            <Fragment>\n              <Row className=\"text-center\" style={{ marginTop: \"-1em\" }}>\n                <Col sm={12}>\n                  <h2\n                    style={{\n                      fontFamily: \"Roboto\",\n                      marginBottom: \"5vh\",\n                      marginTop: \"5vh\",\n                    }}\n                  >\n                    Please wait\n                  </h2>\n                </Col>\n              </Row>\n              <Row className=\"text-center\">\n                <Col sm={12}>\n                  <Loader style={{ marginTop: \"20vh\" }} type=\"Grid\" color=\"#00BFFF\" height=\"30%\" width=\"30%\" />\n                </Col>\n              </Row>\n              <Row className=\"text-center\">\n                <Col sm={12}>\n                  <h2\n                    style={{\n                      fontFamily: \"Roboto\",\n                      marginBottom: \"5vh\",\n                      marginTop: \"5vh\",\n                      textAlign: \"center\",\n                    }}\n                  >\n                    Your transaction is being processed{\" \"}\n                  </h2>\n                </Col>\n              </Row>\n            </Fragment>\n          ) : (\n            <Fragment>\n              <Panel>\n                <Panel.Heading>\n                  <Panel.Title className=\"text-center\" style={{ fontSize: \"1.5em\", fontWeight: \"bold\" }}>\n                    Voting info\n                  </Panel.Title>\n                </Panel.Heading>\n                <Panel.Body>\n                  <ControlLabel style={{ fontSize: \"1.2em\" }}>Question</ControlLabel>\n                  <p>{this.props.voting.info.question}</p>\n                  <ControlLabel style={{ fontSize: \"1.2em\" }}>Voting deadline</ControlLabel>\n                  <p>{covertTimestampToDate(this.props.voting.info.votingEndTime)}</p>\n                  <ControlLabel style={{ fontSize: \"1.2em\" }}>Results expiry date</ControlLabel>\n                  <p>{covertTimestampToDate(this.props.voting.info.resultsEndTime)}</p>\n                  <ControlLabel style={{ fontSize: \"1.2em\" }}>Voting type</ControlLabel>\n                  <p>{this.props.voting.info.isPrivate ? \"Private\" : \"Public\"}</p>\n                  <ControlLabel style={{ fontSize: \"1.2em\" }}>Voting address</ControlLabel>\n                  <p>{this.props.voting.contract._address}</p>\n                </Panel.Body>\n              </Panel>\n              <Panel id={\"choice-panel\"}>\n                <Panel.Heading>\n                  <Panel.Title className=\"text-center\" style={{ fontSize: \"1.5em\", fontWeight: \"bold\" }}>\n                    Possible answers\n                  </Panel.Title>\n                </Panel.Heading>\n\n                <Panel.Body>\n                  {this.props.voting.info.answers.map((answer, index) => {\n                    return (\n                      <Row key={answer}>\n                        <Col sm={10} style={{ paddingLeft: \"60px\" }}>\n                          <h4>{answer}</h4>\n                        </Col>\n                        <Col sm={2} style={{ paddingRight: \"30px\" }}>\n                          <Button\n                            className=\"pull-right\"\n                            value={index}\n                            onClick={() => this.handleAnswerClick(index)}\n                            {...((this.props.voting.info.isPrivileged !== null &&\n                              !this.props.voting.info.isPrivileged) ||\n                            this.props.voting.info.hasUserVoted\n                              ? { disabled: true }\n                              : null)}\n                            {...(this.props.chosenAnswer === index ? { active: true } : null)}\n                          >\n                            Pick answer #{index + 1}\n                          </Button>\n                        </Col>\n                      </Row>\n                    );\n                  })}\n                </Panel.Body>\n              </Panel>\n            </Fragment>\n          )}\n        </Modal.Body>\n        {this.state.isWaitingForTxResponse ? null : (\n          <Modal.Footer>\n            <Row>\n              <Col sm={12} className=\"text-center\">\n                {this.props.voting.info.hasUserVoted ? (\n                  <h4>You have already voted!</h4>\n                ) : (\n                  <Button\n                    bsStyle=\"primary\"\n                    {...(this.props.voting.info.isPrivileged !== null && !this.props.voting.info.isPrivileged\n                      ? { disabled: true }\n                      : null)}\n                    onClick={this.handleSubmit}\n                  >\n                    Submit your vote!\n                  </Button>\n                )}\n              </Col>\n            </Row>\n          </Modal.Footer>\n        )}\n      </Modal>\n    );\n  }\n\n  private handleAnswerClick = (chosenAnswer: number) => {\n    this.props.setChosenAnswerInParent(chosenAnswer);\n  };\n\n  private handleSubmit = async () => {\n    this.setState({ isWaitingForTxResponse: true });\n    try {\n      await submitVote(this.props.blockchainData, this.props.voting, this.props.chosenAnswer);\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.setState({ isWaitingForTxResponse: false });\n    }\n    this.props.requestDataRefresh();\n  };\n}\n","import React, { Component, Fragment } from \"react\";\nimport { ControlLabel, Modal, Panel, Table } from \"react-bootstrap\";\nimport { Voting, VotingInfo } from \"../../utils/types\";\nimport ResultsPieChart from \"./ResultsPieChart\";\nimport { covertTimestampToDate } from \"./VoteModal\";\n\ninterface IResultsModalProps {\n  results: string[];\n  show: boolean;\n  voting: Voting;\n  handleOnHide: () => void;\n}\n\nexport default class ResultsModal extends Component<IResultsModalProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  public getSortedAnswersWithResults = () => {\n    const results = this.props.results.map((result) => parseInt(result, 10));\n    // const resultsPercentage = this.props.results.map((result) => parseInt(result, 10)/results);\n\n    results.sort().reverse();\n    const votingInfo: VotingInfo = this.props.voting.info;\n    const answersAndResults: Array<{ answer: string; result: number }> = [];\n    for (let i = 0; i < this.props.voting.info.answers.length; i++) {\n      const currentAnswer = votingInfo.answers[i];\n      const currenResult = parseInt(this.props.results[i], 10);\n      answersAndResults.push({ answer: currentAnswer, result: currenResult });\n    }\n\n    answersAndResults.sort((first, second) => {\n      return second.result - first.result;\n    });\n\n    return answersAndResults;\n  };\n\n  public render() {\n    const answersAndResults = this.getSortedAnswersWithResults();\n    const sumOfAllVotes = answersAndResults.reduce((partial, obj) => partial + obj.result, 0);\n    return (\n      <Modal show={this.props.show} onHide={this.props.handleOnHide}>\n        <Modal.Body>\n          <Panel>\n            <Panel.Heading>\n              <Panel.Title className=\"text-center\" style={{ fontSize: \"1.5em\", fontWeight: \"bold\" }}>\n                Voting info\n              </Panel.Title>\n            </Panel.Heading>\n            <Panel.Body>\n              <ControlLabel style={{ fontSize: \"1.2em\" }}>Question</ControlLabel>\n              <p>{this.props.voting.info.question}</p>\n\n              <ControlLabel style={{ fontSize: \"1.2em\" }}>Possible answers</ControlLabel>\n              <ul>\n                {this.props.voting.info.answers.map((answer) => {\n                  return <li key={answer}>{answer}</li>;\n                })}\n              </ul>\n              <ControlLabel style={{ fontSize: \"1.2em\" }}>Voting deadline</ControlLabel>\n              <p>{covertTimestampToDate(this.props.voting.info.votingEndTime)}</p>\n              <ControlLabel style={{ fontSize: \"1.2em\" }}>Results expiry date</ControlLabel>\n              <p>{covertTimestampToDate(this.props.voting.info.resultsEndTime)}</p>\n              <ControlLabel style={{ fontSize: \"1.2em\" }}>Voting type</ControlLabel>\n              <p>{this.props.voting.info.isPrivate ? \"Private\" : \"Public\"}</p>\n              <ControlLabel style={{ fontSize: \"1.2em\" }}>Voting address</ControlLabel>\n              <p>{this.props.voting.contract._address}</p>\n            </Panel.Body>\n          </Panel>\n\n          <Panel>\n            <Panel.Heading>\n              <Panel.Title className=\"text-center\" style={{ fontSize: \"1.5em\", fontWeight: \"bold\" }}>\n                Voting results\n              </Panel.Title>\n            </Panel.Heading>\n            <Panel.Body>\n              <Table responsive>\n                <thead>\n                  <tr>\n                    <th style={{ textAlign: \"center\" }}>Answer</th>\n                    <th style={{ textAlign: \"center\" }}>No. votes</th>\n                    <th style={{ textAlign: \"center\" }}>Percentage</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {answersAndResults.map((element) => (\n                    <tr key={element.answer}>\n                      <td style={{ width: \"65%\" }}>{element.answer}</td>\n                      <td style={{ textAlign: \"center\" }}>{element.result}</td>\n                      <td style={{ textAlign: \"center\" }}>\n                        {((100 * element.result) / (sumOfAllVotes > 0 ? sumOfAllVotes : 1)).toFixed(2)}%\n                      </td>\n                    </tr>\n                  ))}\n                </tbody>\n              </Table>\n\n              {this.props.results.every((val) => parseInt(val, 10) === 0) ? (\n                <h3 className=\"text-center\">No one has voted!</h3>\n              ) : (\n                <Fragment>\n                  <ResultsPieChart results={this.props.results} voting={this.props.voting} />\n                </Fragment>\n              )}\n            </Panel.Body>\n          </Panel>\n        </Modal.Body>\n      </Modal>\n    );\n  }\n}\n","import moment from \"moment\";\nimport React, { Component } from \"react\";\nimport {\n  Button,\n  Col,\n  ControlLabel,\n  FormControl,\n  FormGroup,\n  Glyphicon,\n  Grid,\n  HelpBlock,\n  InputGroup,\n  Row,\n} from \"react-bootstrap\";\nimport { Validation } from \"../../utils/enums\";\nimport { fetchResults, fetchVoting } from \"../../utils/eth\";\nimport { BlockchainData, Voting } from \"../../utils/types\";\nimport NotFoundModal from \"../vote/NotFoundModal\";\nimport ResultsModal from \"../vote/ResultsModal\";\nimport VoteModal from \"../vote/VoteModal\";\n\ninterface IHomePageProps {\n  blockchainData: BlockchainData;\n}\n\ninterface IHomePageState {\n  chosenAnswer: number;\n  isDataRefreshRequested: boolean;\n  searchActionCalled: boolean;\n  searchBoxText: string;\n  showNotFoundModal: boolean;\n  showResultsModal: boolean;\n  showVoteModal: boolean;\n  voting: Voting;\n  votingResults: string[];\n}\n\nexport default class HomePage extends Component<IHomePageProps, IHomePageState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      chosenAnswer: null,\n      isDataRefreshRequested: false,\n      searchActionCalled: false,\n      searchBoxText: \"\",\n      showNotFoundModal: false,\n      showResultsModal: false,\n      showVoteModal: false,\n      voting: null,\n      votingResults: null,\n    };\n  }\n\n  public searchVoting = async () => {\n    if (this.getValidationState() !== Validation.Success) {\n      return;\n    }\n\n    const address = this.state.searchBoxText;\n    const fetchedVoting = await fetchVoting(this.props.blockchainData, address);\n\n    this.setState({\n      searchActionCalled: true,\n      voting: fetchedVoting,\n    });\n\n    if (fetchedVoting != null) {\n      const now = moment().utc().unix(); // prettier-ignore\n      if (now <= fetchedVoting.info.votingEndTime) {\n        this.setState({\n          showNotFoundModal: false,\n          showResultsModal: false,\n          showVoteModal: true,\n        });\n      } else if (now <= fetchedVoting.info.resultsEndTime) {\n        const results = await fetchResults(this.state.voting);\n        this.setState({\n          showNotFoundModal: false,\n          showResultsModal: true,\n          showVoteModal: false,\n          votingResults: results,\n        });\n      }\n    } else {\n      this.setState({\n        showNotFoundModal: true,\n        showResultsModal: false,\n        showVoteModal: false,\n      });\n    }\n  };\n\n  public handleAnswerClick = (answerIndexFromChild: number) => {\n    this.setState({ chosenAnswer: answerIndexFromChild });\n  };\n\n  public getValidationState = () => {\n    if (this.state.searchBoxText !== \"\") {\n      const isValid = this.props.blockchainData.web3.utils.isAddress(this.state.searchBoxText);\n      if (!isValid || this.state.searchBoxText.length !== 42) {\n        return Validation.Error;\n      } else {\n        return Validation.Success;\n      }\n    }\n    return null;\n  };\n\n  public handleSearchBoxChange = (e) => {\n    this.setState({\n      searchBoxText: e.target.value,\n    });\n  };\n\n  public setErrorHelper = () => {\n    const text = this.state.searchBoxText;\n\n    if (text.length < 42) {\n      if (text[0] !== \"0\" || (text.length >= 2 && text.substring(0, 2) !== \"0x\")) {\n        return \"Address must begin with '0x' prefix\";\n      }\n      if (text.length > 2 && !text.match(\"^0x[A-Fa-f0-9]+$\")) {\n        return \"Address suffix must consist of only hexadecimal digits (0-9, A-F, a-f)\";\n      }\n      return \"Address must be 42 characters long\";\n    }\n    if (text.length === 42) {\n      if (text.substring(0, 2) !== \"0x\") {\n        return \"Address must begin with '0x' prefix\";\n      }\n      if (!text.match(\"^0x[A-Fa-f0-9]+$\")) {\n        return \"Address suffix must consist of only hexadecimal digits (0-9, A-F, a-f)\";\n      }\n      return \"Wrong checksum\";\n    }\n    return \"Address must be 42 characters long\";\n  };\n\n  public render() {\n    const validationState = this.getValidationState();\n    let modal;\n    if (this.state.voting != null) {\n      if (this.state.showVoteModal) {\n        modal = (\n          <VoteModal\n            voting={this.state.voting}\n            blockchainData={this.props.blockchainData}\n            requestDataRefresh={this.searchVoting}\n            show={this.state.showVoteModal}\n            handleOnHide={() => this.setState({ showVoteModal: false })}\n            chosenAnswer={this.state.chosenAnswer}\n            setChosenAnswerInParent={this.handleAnswerClick}\n          />\n        );\n      } else if (this.state.showResultsModal) {\n        modal = (\n          <ResultsModal\n            show={this.state.showResultsModal}\n            handleOnHide={() => this.setState({ showResultsModal: false })}\n            voting={this.state.voting}\n            results={this.state.votingResults}\n          />\n        );\n      }\n    } else if (this.state.searchActionCalled) {\n      modal = (\n        <NotFoundModal\n          show={this.state.showNotFoundModal}\n          handleOnHide={() => this.setState({ showNotFoundModal: false })}\n        />\n      );\n    }\n\n    return (\n      <Grid>\n        <Row>\n          <div style={{ marginBottom: \"8em\" }}>\n            <h1 style={{ fontSize: \"5em\", fontFamily: \"Roboto\", textAlign: \"center\", marginTop: \"1em\" }}>\n              Distributed Voting Platform\n            </h1>\n            <h3 style={{ fontFamily: \"Roboto\", textAlign: \"center\" }}>\n              Fully anonymous and transparent voting platform powered by Ethereum blockchain.\n            </h3>\n          </div>\n        </Row>\n        <Row />\n        <Row>\n          <Col md={12}>\n            <FormGroup>\n              <ControlLabel style={{ fontSize: \"2em\" }}>Search for the voting</ControlLabel>\n              <HelpBlock>\n                Enter a valid keccak256 Ethereum address. Use all upper- or lowercase characters to ignore{\" \"}\n                <a href=\"https://github.com/ethereum/EIPs/blob/master/EIPS/eip-55.md\">checksum validation</a>.\n              </HelpBlock>\n              <InputGroup>\n                <FormGroup bsSize=\"large\" controlId=\"address\" validationState={validationState}>\n                  <FormControl\n                    type=\"text\"\n                    value={this.state.searchBoxText}\n                    onChange={this.handleSearchBoxChange}\n                    placeholder=\"Enter voting adress\"\n                    onKeyPress={(event) => {\n                      if (event.key === \"Enter\") {\n                        this.searchVoting();\n                      }\n                    }}\n                  />\n                  <FormControl.Feedback />\n                </FormGroup>\n                <InputGroup.Button>\n                  <Button bsSize=\"large\" onClick={this.searchVoting} disabled={validationState === Validation.Error}>\n                    <Glyphicon glyph=\"search\" />\n                  </Button>\n                </InputGroup.Button>\n              </InputGroup>\n              {validationState === Validation.Error && (\n                <HelpBlock style={{ color: \"#a94442\" }}>{this.setErrorHelper()}</HelpBlock>\n              )}\n            </FormGroup>\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12}>{modal}</Col>\n        </Row>\n      </Grid>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect, Route } from \"react-router-dom\";\nimport NoMetamaskAccess from \"../../images/no-acceptance.png\";\nimport NoMetamaskInstalled from \"../../images/no-metamask.png\";\nimport WrongNetwork from \"../../images/wrong-network.png\";\nimport AboutPage from \"../about/AboutPage\";\n\ninterface INoAccessPageProps {\n  title: string;\n  firstParagraph: string;\n  secondParagraph: any;\n  imgChoice: number;\n}\n\nexport default class NoAccessPage extends Component<INoAccessPageProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  public render() {\n    let imgSrc;\n    if (this.props.imgChoice == 1) {\n      imgSrc = NoMetamaskInstalled;\n    } else if (this.props.imgChoice === 2) {\n      imgSrc = WrongNetwork;\n    } else {\n      imgSrc = NoMetamaskAccess;\n    }\n    return (\n      <div>\n        <Route\n          exact\n          path=\"/\"\n          render={() => (\n            <div style={{ width: \"100vw\", height: \"100vh\" }}>\n              <h1\n                style={{\n                  fontFamily: \"Roboto\",\n                  fontSize: \"4em\",\n                  marginBottom: \"1.5em\",\n                  marginTop: \"1.5em\",\n                  textAlign: \"center\",\n                }}\n              >\n                {this.props.title}\n              </h1>\n              <img\n                style={{\n                  display: \"block\",\n                  height: \"auto\", // 2nd option: 50%\n                  marginBottom: \"1.5em\",\n                  marginLeft: \"auto\",\n                  marginRight: \"auto\",\n                  maxHeight: \"50%\", // 2nd option: remove\n                  maxWidth: \"70%\", // 2nd option: remove\n                  width: \"auto\", // 2nd option: auto\n                }}\n                src={imgSrc}\n              />\n              <p style={{ fontSize: \"2em\", fontFamily: \"Roboto\", textAlign: \"center\" }}>{this.props.firstParagraph}</p>\n              <p style={{ fontSize: \"2em\", fontFamily: \"Roboto\", textAlign: \"center\" }}>{this.props.secondParagraph}</p>\n            </div>\n          )}\n        />\n        <Route exact path=\"/about\" component={AboutPage} />\n        <Redirect path=\"*\" to=\"/\" />\n      </div>\n    );\n  }\n}\n","import React, { Component, Fragment } from \"react\";\nimport { ControlLabel, DropdownButton, FormGroup, HelpBlock, MenuItem } from \"react-bootstrap\";\nimport Loader from \"react-loader-spinner\";\nimport { fetchCategories } from \"../../utils/eth\";\nimport { BlockchainData, Category } from \"../../utils/types\";\n\ninterface ICategoryListProps {\n  blockchainData: BlockchainData;\n  categories: Category[];\n  chosenCategoryIndex: number;\n  setChosenCategoryInParent: (arg: number) => void;\n  setCategoriesInParent: (arg: Category[]) => void;\n}\n\ninterface ICategoryListState {\n  areCategoriesFetched: boolean;\n  buttonTitle: string;\n}\n\nexport default class CategoryDropdown extends Component<ICategoryListProps, ICategoryListState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      areCategoriesFetched: false,\n      buttonTitle: \"Category\",\n    };\n  }\n\n  public componentDidMount = async () => {\n    if (this.props.blockchainData) {\n      const categories = await fetchCategories(this.props.blockchainData);\n      this.props.setCategoriesInParent(categories);\n      this.setState({ areCategoriesFetched: true });\n    }\n  };\n\n  public componentDidUpdate = async () => {\n    // If blockchainData was initialized after this component had mounted\n    if (!this.state.areCategoriesFetched && this.props.blockchainData) {\n      const categories = await fetchCategories(this.props.blockchainData);\n      this.props.setCategoriesInParent(categories);\n      this.setState({ areCategoriesFetched: true });\n    }\n  };\n\n  public handleOnClick = (chosenCategoryName: string) => {\n    this.setState({ buttonTitle: chosenCategoryName });\n    let chosenCategoryIndex: number;\n    this.props.categories.forEach((category, index) => {\n      if (category.name === chosenCategoryName) {\n        chosenCategoryIndex = index;\n      }\n    });\n    this.props.setChosenCategoryInParent(chosenCategoryIndex);\n  };\n\n  public render() {\n    return (\n      <Fragment>\n        <FormGroup>\n          <ControlLabel style={{ fontSize: \"1.5em\" }}>Category</ControlLabel>\n          <HelpBlock>Select an existing category from the list</HelpBlock>\n          {this.state.areCategoriesFetched ? (\n            <DropdownButton id=\"categories\" title={this.state.buttonTitle} bsStyle=\"default\">\n              {this.props.categories.map((cat, index) => {\n                return (\n                  <MenuItem\n                    key={cat.name}\n                    eventKey={cat.name}\n                    onSelect={() => this.handleOnClick(cat.name)}\n                    {...(index === this.props.chosenCategoryIndex ? { active: true } : null)}\n                  >\n                    {cat.name}\n                  </MenuItem>\n                );\n              })}\n            </DropdownButton>\n          ) : (\n            <div>\n              <Loader type=\"Grid\" color=\"#00BFFF\" height=\"10%\" width=\"10%\" />\n\n              <h2>Fetching data from blockchain...</h2>\n            </div>\n          )}\n        </FormGroup>\n      </Fragment>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { ControlLabel, FormGroup, HelpBlock, ToggleButton, ToggleButtonGroup } from \"react-bootstrap\";\nimport { PrivacySetting } from \"../../utils/enums\";\n\ninterface IPrivacyButtonsProps {\n  chosenPrivacySetting: PrivacySetting;\n  setchosenPrivacySettingInParent: (arg: PrivacySetting) => void;\n}\n\nexport default class PrivacyButtons extends Component<IPrivacyButtonsProps> {\n  constructor(props) {\n    super(props);\n  }\n\n  public handleOnChange = (chosenPrivacySetting: PrivacySetting) => {\n    this.props.setchosenPrivacySettingInParent(chosenPrivacySetting);\n  };\n\n  public render() {\n    return (\n      <FormGroup>\n        <ControlLabel style={{ fontSize: \"1.5em\" }}>Voting type</ControlLabel>\n        <HelpBlock>Display votings with selected privacy type</HelpBlock>\n        <ToggleButtonGroup\n          type=\"radio\"\n          name=\"privacySetting\"\n          value={this.props.chosenPrivacySetting}\n          onChange={this.handleOnChange}\n          justified\n        >\n          <ToggleButton\n            value={PrivacySetting.All}\n            {...(this.props.chosenPrivacySetting === PrivacySetting.All ? { active: true } : null)}\n          >\n            {PrivacySetting.All}\n          </ToggleButton>\n          <ToggleButton\n            value={PrivacySetting.Public}\n            {...(this.props.chosenPrivacySetting === PrivacySetting.Public ? { active: true } : null)}\n          >\n            {PrivacySetting.Public}\n          </ToggleButton>\n          <ToggleButton\n            value={PrivacySetting.Private}\n            {...(this.props.chosenPrivacySetting === PrivacySetting.Private ? { active: true } : null)}\n          >\n            {PrivacySetting.Private}\n          </ToggleButton>\n        </ToggleButtonGroup>\n      </FormGroup>\n    );\n  }\n}\n","import moment from \"moment\";\nimport React, { Component, Fragment } from \"react\";\nimport {\n  Glyphicon,\n  HelpBlock,\n  ListGroup,\n  ListGroupItem,\n  OverlayTrigger,\n  Pagination,\n  Panel,\n  Tooltip,\n} from \"react-bootstrap\";\nimport { PrivacySetting, VotingState } from \"../../utils/enums\";\nimport { fetchVotings } from \"../../utils/eth\";\nimport { BlockchainData, Category, ContractAddress, Voting } from \"../../utils/types\";\n\ninterface IVotingListProps {\n  blockchainData: BlockchainData;\n  chosenVotingAddress: ContractAddress;\n  category: Category;\n  displayInaccessibleVotings: boolean;\n  filterPhase: string;\n  votings: Voting[];\n  privacySetting: PrivacySetting;\n  votingState: VotingState;\n  isDataRefreshRequested: boolean;\n  dataRefreshRequestHandled: () => void;\n  setVotingsInParent: (arg: Voting[]) => void;\n  setChosenVotingAddressInParent: (arg: ContractAddress) => void;\n}\n\ninterface IVotingListState {\n  activePageIndex: number;\n  areVotingsFetched: boolean;\n  filteredVotings: Voting[];\n  votingsForPage: Voting[];\n}\n\nexport default class VotingList extends Component<IVotingListProps, IVotingListState> {\n  private nrOfVotingsPerPage = 10; // TBD\n\n  private publicVotingTooltip = (\n    <Tooltip id=\"tooltip\">\n      <strong>Public voting</strong>\n      <p>Everyone can take active participation in this voting!</p>\n    </Tooltip>\n  );\n\n  private privateVotingTooltip = (\n    <Tooltip id=\"tooltip\">\n      <strong>Private voting with access</strong>\n      <p>You are permitted to take active participation in this voting.</p>\n    </Tooltip>\n  );\n\n  private inaccessibleVotingTooltip = (\n    <Tooltip id=\"tooltip\">\n      <strong>Inaccessible private voting</strong>\n      <p>\n        Voting creator did not grant you access to this voting. You cannot take active participation, but you can still\n        look at the results!\n      </p>\n    </Tooltip>\n  );\n\n  constructor(params) {\n    super(params);\n\n    this.state = {\n      activePageIndex: 1,\n      areVotingsFetched: false,\n      filteredVotings: [],\n      votingsForPage: [],\n    };\n  }\n\n  public componentDidMount = async () => {\n    if (this.props.blockchainData) {\n      this.fetchVotingsAndSetState();\n    }\n  };\n\n  public componentDidUpdate = async (prevProps: IVotingListProps) => {\n    if (prevProps.category !== this.props.category) {\n      this.setState({ areVotingsFetched: false });\n    }\n    if (prevProps.privacySetting !== this.props.privacySetting) {\n      this.setState({ activePageIndex: 1 });\n    }\n    if (prevProps.displayInaccessibleVotings !== this.props.displayInaccessibleVotings) {\n      this.setState({ activePageIndex: 1 });\n    }\n    if (prevProps.filterPhase !== this.props.filterPhase) {\n      this.setState({ activePageIndex: 1 });\n    }\n    if (this.props.isDataRefreshRequested && this.props.blockchainData) {\n      this.fetchVotingsAndSetState();\n      this.props.dataRefreshRequestHandled();\n    }\n    if (!this.state.areVotingsFetched && this.props.blockchainData) {\n      this.fetchVotingsAndSetState();\n    }\n    const pageInfo = document.getElementById(\"xd\");\n    if (pageInfo) pageInfo.focus();\n  };\n\n  public render() {\n    const nrOfPages = Math.ceil(this.filteredVotings().length / this.nrOfVotingsPerPage);\n    const votingsToDisplay = this.getVotingsForPage();\n    return (\n      <Fragment>\n        {this.state.areVotingsFetched ? (\n          <Fragment>\n            <Panel>\n              <ListGroup>\n                {votingsToDisplay.length > 0 ? (\n                  votingsToDisplay.map((voting) => {\n                    if (voting.info.isPrivate && voting.info.isPrivileged) {\n                      return (\n                        <OverlayTrigger placement=\"right\" overlay={this.privateVotingTooltip}>\n                          <ListGroupItem\n                            key={voting.contract._address}\n                            onClick={this.handleVotingClick}\n                            {...(voting.info.hasUserVoted ? { bsStyle: \"success\" } : null)}\n                          >\n                            {voting.info.question}\n                            <Glyphicon glyph=\"lock\" className=\"pull-right\" />\n                          </ListGroupItem>\n                        </OverlayTrigger>\n                      );\n                    } else if (voting.info.isPrivate && !voting.info.isPrivileged) {\n                      return (\n                        <OverlayTrigger placement=\"right\" overlay={this.inaccessibleVotingTooltip}>\n                          <ListGroupItem\n                            key={voting.contract._address}\n                            onClick={this.handleVotingClick}\n                            bsStyle=\"danger\"\n                          >\n                            {voting.info.question}\n                            <Glyphicon glyph=\"ban-circle\" className=\"pull-right\" />\n                          </ListGroupItem>\n                        </OverlayTrigger>\n                      );\n                    } else {\n                      return (\n                        <OverlayTrigger placement=\"right\" overlay={this.publicVotingTooltip}>\n                          <ListGroupItem\n                            key={voting.contract._address}\n                            onClick={this.handleVotingClick}\n                            {...(voting.info.hasUserVoted ? { bsStyle: \"success\" } : null)}\n                          >\n                            {voting.info.question}\n                            <Glyphicon glyph=\"globe\" className=\"pull-right\" />\n                          </ListGroupItem>\n                        </OverlayTrigger>\n                      );\n                    }\n                  })\n                ) : (\n                  <Fragment>\n                    <HelpBlock style={{ textAlign: \"center\", fontSize: \"1.5em\", fontWeight: \"bold\" }}>\n                      No votings found\n                    </HelpBlock>{\" \"}\n                    <HelpBlock style={{ textAlign: \"center\" }}>\n                      Either your filters don't match any of the votings in the selected category or the category you\n                      selected is empty :(\n                    </HelpBlock>\n                  </Fragment>\n                )}\n              </ListGroup>\n            </Panel>\n            <div style={{ width: \"100%\" }}>\n              <div style={{ width: \"50%\", margin: \"0 auto\", textAlign: \"center\" }}>\n                {nrOfPages > 1 && (\n                  <Pagination>\n                    <Pagination.First\n                      onClick={this.state.activePageIndex !== 1 ? this.paginationFirst : null}\n                      disabled={this.state.activePageIndex === 1 ? true : false}\n                    />\n                    <Pagination.Prev\n                      onClick={this.state.activePageIndex > 1 ? this.paginationPrev : null}\n                      disabled={this.state.activePageIndex === 1 ? true : false}\n                    />\n                    <Pagination.Item id=\"xd\" autoFocus={true}>\n                      Page {this.state.activePageIndex}/{nrOfPages}\n                    </Pagination.Item>\n                    <Pagination.Next\n                      onClick={this.state.activePageIndex !== nrOfPages ? this.paginationNext : null}\n                      disabled={this.state.activePageIndex === nrOfPages ? true : false}\n                    />\n                    <Pagination.Last\n                      onClick={\n                        this.state.activePageIndex !== nrOfPages\n                          ? () => {\n                              this.paginationLast(nrOfPages);\n                            }\n                          : null\n                      }\n                      disabled={this.state.activePageIndex === nrOfPages ? true : false}\n                    />\n                  </Pagination>\n                )}\n              </div>\n            </div>\n          </Fragment>\n        ) : (\n          <Panel>\n            <Panel.Body>Fetching data from blockchain...</Panel.Body>\n          </Panel>\n        )}\n      </Fragment>\n    );\n  }\n\n  private handleVotingClick = (event: React.MouseEvent<ListGroupItem & HTMLInputElement>) => {\n    const question = event.currentTarget.innerText;\n    let chosenVotingIndex: number;\n    this.props.votings.forEach((voting, index) => {\n      if (voting.info.question === question) {\n        chosenVotingIndex = index;\n      }\n    });\n    this.props.setChosenVotingAddressInParent(this.props.votings[chosenVotingIndex].contract._address);\n  };\n\n  private fetchVotingsAndSetState = async () => {\n    const votings = await fetchVotings(this.props.blockchainData, this.props.category, this.props.votingState);\n    this.props.setVotingsInParent(votings);\n    const filteredVotings = this.filteredVotings();\n    this.setState({\n      areVotingsFetched: true,\n      filteredVotings,\n    });\n  };\n\n  private filteredVotings = () => {\n    let votings = this.props.votings;\n\n    if (this.props.filterPhase !== \"\") {\n      votings = votings.filter((voting) => {\n        return voting.info.question.includes(this.props.filterPhase);\n      });\n    }\n    return votings\n      .filter((voting) => {\n        if (!this.props.displayInaccessibleVotings) {\n          return voting.info.isPrivileged === null || voting.info.isPrivileged;\n        } else return true;\n      })\n      .filter((voting) => {\n        if (this.props.privacySetting === PrivacySetting.Private) {\n          return voting.info.isPrivate;\n        } else if (this.props.privacySetting === PrivacySetting.Public) {\n          return !voting.info.isPrivate;\n        } else return true;\n      })\n      .filter((voting) => {\n        const now = moment().utc().unix(); // prettier-ignore\n        if (this.props.votingState === VotingState.Active) {\n          return now <= voting.info.votingEndTime;\n        } else if (this.props.votingState === VotingState.Passive) {\n          return voting.info.votingEndTime < now && now <= voting.info.resultsEndTime;\n        } else return false;\n      });\n  };\n\n  private getVotingsForPage() {\n    let index = this.state.activePageIndex - 1;\n    const votings = this.filteredVotings();\n    const dividedVotings: Voting[][] = [];\n\n    for (let i = 0; i < votings.length; i += this.nrOfVotingsPerPage) {\n      dividedVotings.push(votings.slice(i, i + this.nrOfVotingsPerPage));\n    }\n    if (dividedVotings.length === 1) index = 0;\n\n    return dividedVotings.length > 0 ? dividedVotings[index] : [];\n  }\n\n  private handlePageClick(index: number) {\n    if (this.state.activePageIndex !== index) {\n      this.setState({\n        activePageIndex: index,\n      });\n    }\n  }\n\n  private paginationFirst = () => {\n    this.setState({\n      activePageIndex: 1,\n    });\n    this.handlePageClick(1);\n  };\n\n  private paginationNext = () => {\n    const newIndex = this.state.activePageIndex + 1;\n    this.setState({\n      activePageIndex: newIndex,\n    });\n    this.handlePageClick(newIndex);\n  };\n\n  private paginationPrev = () => {\n    const newIndex = this.state.activePageIndex - 1;\n    this.setState({\n      activePageIndex: newIndex,\n    });\n    this.handlePageClick(newIndex);\n  };\n\n  private paginationLast = (length: number) => {\n    this.setState({\n      activePageIndex: length,\n    });\n    this.handlePageClick(length);\n  };\n}\n","import moment from \"moment\";\nimport React, { Component, Fragment } from \"react\";\nimport { Col, FormControl, Grid, HelpBlock, Row } from \"react-bootstrap\";\nimport Switch from \"react-switch\";\nimport { PrivacySetting, VotingState } from \"../../utils/enums\";\nimport { fetchResults } from \"../../utils/eth\";\nimport { BlockchainData, Category, ContractAddress, Voting } from \"../../utils/types\";\nimport ResultsModal from \"../vote/ResultsModal\";\nimport VoteModal from \"../vote/VoteModal\";\nimport CategoryDropdown from \"./CategoryDropdown\";\nimport PrivacyButtons from \"./PrivacyButtons\";\nimport VotingList from \"./VotingList\";\ninterface IListVotingsPanelProps {\n  blockchainData: BlockchainData;\n  votingState: VotingState;\n  title: string;\n}\n\ninterface IListVotingsPanelState {\n  categories: Category[];\n  chosenCategoryIndex: number;\n  votings: Voting[];\n  chosenVotingAddress: ContractAddress;\n  chosenPrivacySetting: PrivacySetting;\n  chosenAnswer: number;\n  displayInacessibleVotings: boolean;\n  filterPhase: string;\n\n  isDataRefreshRequested: boolean;\n  results: string[];\n  showResultsModal: boolean;\n  showVoteModal: boolean;\n}\nexport default class ListVotingsPanel extends Component<IListVotingsPanelProps, IListVotingsPanelState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      chosenAnswer: null,\n      chosenCategoryIndex: null,\n      chosenPrivacySetting: PrivacySetting.All,\n      chosenVotingAddress: null,\n      displayInacessibleVotings: false,\n      filterPhase: \"\",\n      isDataRefreshRequested: false,\n      results: [],\n      showResultsModal: false,\n      showVoteModal: false,\n      votings: [],\n    };\n  }\n\n  public setCategories = (categoriesFromChild: Category[]) => {\n    this.setState({ categories: categoriesFromChild });\n  };\n\n  public setPrivacySetting = (privacySettingFromChild: PrivacySetting) => {\n    this.setState({ chosenPrivacySetting: privacySettingFromChild, chosenVotingAddress: null });\n  };\n\n  public setVotings = (votingsFromChild: Voting[]) => {\n    this.setState({ votings: votingsFromChild });\n  };\n\n  public handleCategoryClick = (categoryIndexFromChild: number) => {\n    this.setState({ chosenCategoryIndex: categoryIndexFromChild, chosenVotingAddress: null });\n  };\n\n  public handleVotingClick = async (votingAddressFromChild: ContractAddress) => {\n    this.setState({ chosenVotingAddress: votingAddressFromChild });\n    if (votingAddressFromChild != null) {\n      const now = moment().utc().unix(); // prettier-ignore\n      const voting = this.state.votings.find((v) => v.contract._address === votingAddressFromChild);\n      if (now <= voting.info.votingEndTime) {\n        this.setState({\n          showResultsModal: false,\n          showVoteModal: true,\n        });\n      } else if (now <= voting.info.resultsEndTime) {\n        const results = await fetchResults(voting);\n        this.setState({\n          results,\n          showResultsModal: true,\n          showVoteModal: false,\n        });\n      }\n    }\n  };\n\n  public handleAnswerClick = (answerIndexFromChild: number) => {\n    this.setState({ chosenAnswer: answerIndexFromChild });\n  };\n\n  public dataRefreshed = () => {\n    this.setState({ isDataRefreshRequested: false });\n  };\n\n  public votingTime = () => {\n    return true;\n  };\n\n  public render() {\n    return (\n      <Grid fluid>\n        <Row style={{ textAlign: \"center\" }}>\n          <Col md={12}>\n            <h3 style={{ fontSize: \"2.5em\" }}>{this.props.title}</h3>\n          </Col>\n        </Row>\n        <Row style={{ marginTop: \"5vh\" }}>\n          {/* https://github.com/react-bootstrap/react-bootstrap/issues/1928#issuecomment-331509515 */}\n          <Col md={6}>\n            <CategoryDropdown\n              blockchainData={this.props.blockchainData}\n              categories={this.state.categories}\n              chosenCategoryIndex={this.state.chosenCategoryIndex}\n              setCategoriesInParent={this.setCategories}\n              setChosenCategoryInParent={this.handleCategoryClick}\n            />\n          </Col>\n          <Col md={6}>\n            <PrivacyButtons\n              chosenPrivacySetting={this.state.chosenPrivacySetting}\n              setchosenPrivacySettingInParent={this.setPrivacySetting}\n            />\n          </Col>\n        </Row>\n        {this.state.chosenCategoryIndex != null && (\n          <Row>\n            <Col md={6}>\n              <HelpBlock>Filter the results</HelpBlock>\n              <FormControl type=\"text\" onChange={this.handleFilterChange} />\n            </Col>\n            <Col md={6}>\n              <HelpBlock>Display inaccessible votings</HelpBlock>\n              <Switch\n                checked={this.state.displayInacessibleVotings}\n                onChange={this.handleCheck}\n                onColor=\"#86d3ff\"\n                onHandleColor=\"#2693e6\"\n                uncheckedIcon={false}\n                checkedIcon={false}\n              />\n            </Col>\n          </Row>\n        )}\n\n        <Row style={{ marginTop: \"3vh\" }}>\n          <Col md={12}>\n            {this.state.chosenCategoryIndex != null && (\n              <VotingList\n                category={this.state.categories[this.state.chosenCategoryIndex]}\n                votings={this.state.votings}\n                chosenVotingAddress={this.state.chosenVotingAddress}\n                setVotingsInParent={this.setVotings}\n                setChosenVotingAddressInParent={this.handleVotingClick}\n                blockchainData={this.props.blockchainData}\n                privacySetting={this.state.chosenPrivacySetting}\n                votingState={this.props.votingState}\n                dataRefreshRequestHandled={this.dataRefreshed}\n                isDataRefreshRequested={this.state.isDataRefreshRequested}\n                displayInaccessibleVotings={this.state.displayInacessibleVotings}\n                filterPhase={this.state.filterPhase}\n              />\n            )}\n          </Col>\n        </Row>\n        <Row>\n          <Col md={12}>\n            {this.state.chosenVotingAddress != null && (\n              <Fragment>\n                <VoteModal\n                  voting={this.state.votings.find(\n                    (voting) => voting.contract._address === this.state.chosenVotingAddress\n                  )}\n                  blockchainData={this.props.blockchainData}\n                  chosenAnswer={this.state.chosenAnswer}\n                  setChosenAnswerInParent={this.handleAnswerClick}\n                  requestDataRefresh={() => this.setState({ isDataRefreshRequested: true })}\n                  show={this.state.showVoteModal}\n                  handleOnHide={() => this.setState({ showVoteModal: false })}\n                />\n                <ResultsModal\n                  handleOnHide={() => this.setState({ showResultsModal: false })}\n                  voting={this.state.votings.find(\n                    (voting) => voting.contract._address === this.state.chosenVotingAddress\n                  )}\n                  results={this.state.results}\n                  show={this.state.showResultsModal}\n                />\n              </Fragment>\n            )}\n          </Col>\n        </Row>\n      </Grid>\n    );\n  }\n  private handleCheck = () => {\n    this.setState({\n      displayInacessibleVotings: !this.state.displayInacessibleVotings,\n    });\n  };\n\n  private handleFilterChange = (e) => {\n    this.setState({\n      filterPhase: e.target.value,\n    });\n  };\n}\n","import React, { Component } from \"react\";\nimport { Col, Grid, Row } from \"react-bootstrap\";\nimport { PrivacySetting, VotingState } from \"../../utils/enums\";\nimport { BlockchainData, Category, Voting } from \"../../utils/types\";\nimport ListVotingsPanel from \"./ListVotingsPanel\";\n\ninterface IListVotingsPageProps {\n  blockchainData: BlockchainData;\n}\n\ninterface IListVotingsPageState {\n  categories: Category[];\n  chosenCategoryIndex: number;\n  votings: Voting[];\n  chosenVotingIndex: number;\n  chosenPrivacySetting: PrivacySetting;\n}\n\nexport default class ListVotingsPage extends Component<IListVotingsPageProps, IListVotingsPageState> {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categories: [],\n      chosenCategoryIndex: null,\n      chosenPrivacySetting: PrivacySetting.All,\n      chosenVotingIndex: null,\n      votings: [],\n    };\n  }\n\n  public setCategories = (categoriesFromChild: Category[]) => {\n    this.setState({ categories: categoriesFromChild });\n  };\n\n  public setVotings = (votingsFromChild: Voting[]) => {\n    this.setState({ votings: votingsFromChild });\n  };\n\n  public handleCategoryClick = (categoryIndexFromChild: number) => {\n    this.setState({ chosenCategoryIndex: categoryIndexFromChild, chosenVotingIndex: null });\n  };\n\n  public handleVotingClick = (votingIndexFromChild: number) => {\n    this.setState({ chosenVotingIndex: votingIndexFromChild });\n  };\n\n  public render() {\n    return (\n      <Grid fluid>\n        <Row>\n          <Col md={5} mdOffset={1}>\n            <ListVotingsPanel\n              blockchainData={this.props.blockchainData}\n              title=\"Active Votings\"\n              votingState={VotingState.Active}\n            />\n          </Col>\n          <Col md={5}>\n            <ListVotingsPanel\n              blockchainData={this.props.blockchainData}\n              title=\"Finished Votings\"\n              votingState={VotingState.Passive}\n            />\n          </Col>\n        </Row>\n      </Grid>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Col, Grid, Row } from \"react-bootstrap\";\nimport Loader from \"react-loader-spinner\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Web3 from \"web3\";\nimport * as AppConfig from \"../config.json\";\nimport ManagerAbi from \"../contracts/ManagerContract.json\";\nimport { ManagerContract } from \"../typed-contracts/ManagerContract\";\nimport { BlockchainData } from \"../utils/types.js\";\nimport AboutPage from \"./about/AboutPage\";\nimport Header from \"./common/Header\";\nimport CreateVotePage from \"./createVote/CreateVotePage\";\nimport HomePage from \"./home/HomePage\";\nimport NoAccessPage from \"./home/NoAccessPage\";\nimport ListVotingsPage from \"./listvotings/ListVotingsPage\";\n\ninterface IAppState {\n  blockchainData: BlockchainData;\n  noMetamask: boolean;\n  waitingForAccess: boolean;\n  wrongNetwork: boolean;\n  connectedNetworkType: string;\n}\n\nexport default class App extends Component<any, IAppState> {\n  constructor(props: any) {\n    super(props);\n    this.state = {\n      blockchainData: null,\n      connectedNetworkType: \"\",\n      noMetamask: false,\n      waitingForAccess: true,\n      wrongNetwork: false,\n    };\n  }\n  // tslint:disable:no-string-literal\n  public componentDidMount = async () => {\n    if (!window[\"ethereum\"]) {\n      this.setState({\n        noMetamask: true,\n      });\n      return;\n    }\n    let wrongNetwork = false;\n    let networkType = \"\";\n    try {\n      const accounts = await window[\"ethereum\"].enable();\n      const web3 = new Web3(window[\"ethereum\"]);\n      networkType = await (web3.eth.net as any).getNetworkType();\n      if (networkType !== AppConfig.network) {\n        wrongNetwork = true;\n        throw new Error(\"Metamask is connected to other network than the one defined in application\");\n      }\n      const instance = new web3.eth.Contract(ManagerAbi.abi, AppConfig.managerContractAddress) as ManagerContract;\n      instance.setProvider(web3.currentProvider);\n      instance.options.from = accounts[0];\n      this.setState({\n        blockchainData: { manager: instance, accounts, web3 },\n      });\n    } catch (e) {\n      console.error(e);\n    } finally {\n      this.setState({\n        connectedNetworkType: networkType,\n        waitingForAccess: false,\n        wrongNetwork,\n      });\n    }\n  };\n  // tslint:enable:no-string-literal\n  public lol = () => {\n    this.forceUpdate();\n  };\n  public render() {\n    if (this.state.noMetamask) {\n      const title = \"No MetaMask detected\";\n      const firstParagraph = \"This application needs MetaMask browser extension to work properly.\";\n      const secondParagraph = (\n        <span>\n          <a href=\"https://metamask.io/\">Install it now</a> create your first wallet and come back later.\n        </span>\n      );\n      return (\n        <div>\n          <Header block={3} />\n          <NoAccessPage title={title} firstParagraph={firstParagraph} secondParagraph={secondParagraph} imgChoice={1} />\n        </div>\n      );\n    }\n    if (this.state.waitingForAccess) {\n      return (\n        <div>\n          <Header block={4} />\n          <Grid>\n            <Row className=\"text-center\">\n              <div\n                style={{\n                  marginTop: \"10vh\",\n                }}\n              >\n                <Loader style={{ marginTop: \"20vh\" }} type=\"Grid\" color=\"#00BFFF\" height=\"30%\" width=\"30%\" />\n              </div>\n            </Row>\n            <Row className=\"text-center\">\n              <Col sm={12}>\n                <h1\n                  style={{\n                    fontFamily: \"Roboto\",\n                    marginBottom: \"5vh\",\n                    marginTop: \"5vh\",\n                    textAlign: \"center\",\n                  }}\n                >\n                  Waiting for access\n                </h1>\n              </Col>\n            </Row>\n          </Grid>\n        </div>\n      );\n    } else if (!this.state.blockchainData && this.state.wrongNetwork) {\n      const title = \"Wrong network\";\n      const firstParagraph =\n        \"This distributed application is defined to work with '\" +\n        AppConfig.network +\n        \"' network. You are currently connected to '\" +\n        this.state.connectedNetworkType +\n        \"'\";\n      const secondParagraph = \"Change the network you are connecting to in your Metamask extension.\";\n      return (\n        <div>\n          <Header block={3} />\n          <NoAccessPage title={title} firstParagraph={firstParagraph} secondParagraph={secondParagraph} imgChoice={2} />\n        </div>\n      );\n    } else if (!this.state.blockchainData) {\n      const title = \"Access request rejected\";\n      const firstParagraph = \"This distributed application needs access to your Metamask data.\";\n      const secondParagraph = \"Refresh page and grant access when the Metamask pop-up window appears.\";\n      return (\n        <div>\n          <Header block={3} />\n          <NoAccessPage title={title} firstParagraph={firstParagraph} secondParagraph={secondParagraph} imgChoice={3} />\n        </div>\n      );\n    } else {\n      return (\n        <Router>\n          <div>\n            <Header block={0} />\n            <div>\n              <Route exact path=\"/\" render={() => <HomePage blockchainData={this.state.blockchainData} />} />\n              <Route path=\"/createvote\" render={() => <CreateVotePage blockchainData={this.state.blockchainData} />} />\n              <Route\n                path=\"/listvotings\"\n                render={() => <ListVotingsPage blockchainData={this.state.blockchainData} />}\n              />\n              <Route path=\"/about\" component={AboutPage} />\n            </div>\n          </div>\n        </Router>\n      );\n    }\n  }\n}\n","import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\") as HTMLElement\n);\n"],"sourceRoot":""}